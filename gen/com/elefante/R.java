/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.elefante;

public final class R {
    public static final class anim {
        public static final int abc_fade_in = 0x7f040000;
        public static final int abc_fade_out = 0x7f040001;
        public static final int abc_slide_in_bottom = 0x7f040002;
        public static final int abc_slide_in_top = 0x7f040003;
        public static final int abc_slide_out_bottom = 0x7f040004;
        public static final int abc_slide_out_top = 0x7f040005;
    }

    public static final class attr {
        /**
         * Custom divider drawable to use for elements in the action bar.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarDivider = 0x7f010035;
        /**
         * Custom item state list drawable background for action bar items.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarItemBackground = 0x7f010036;
        /**
         * Size of the Action Bar, including the contextual
         * bar used to present Action Modes.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int actionBarSize = 0x7f010034;
        /**
         * Reference to a theme that should be used to inflate widgets
         * and layouts destined for the action bar. Most of the time
         * this will be a reference to the current theme, but when
         * the action bar has a significantly different contrast
         * profile than the rest of the activity the difference
         * can become important. If this is set to @null the current
         * theme will be used.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarSplitStyle = 0x7f010032;
        /**
         * Reference to a style for the Action Bar
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarStyle = 0x7f010031;
        /**
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabBarStyle = 0x7f01002e;
        /**
         * Default style for tabs within an action bar
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabStyle = 0x7f01002d;
        /**
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabTextStyle = 0x7f01002f;
        /**
         * Reference to a theme that should be used to inflate widgets
         * and layouts destined for the action bar. Most of the time
         * this will be a reference to the current theme, but when
         * the action bar has a significantly different contrast
         * profile than the rest of the activity the difference
         * can become important. If this is set to @null the current
         * theme will be used.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarWidgetTheme = 0x7f010033;
        /**
         * Default action button style.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionButtonStyle = 0x7f01003c;
        /**
         * Default ActionBar dropdown style.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionDropDownStyle = 0x7f01006d;
        /**
         * An optional layout to be used as an action view.
         * See {@link android.view.MenuItem#setActionView(android.view.View)}
         * for more info.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionLayout = 0x7f010074;
        /**
         * TextAppearance style that will be applied to text that
         * appears within action menu items.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionMenuTextAppearance = 0x7f010037;
        /**
         * Color for text that appears within action menu items.
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int actionMenuTextColor = 0x7f010038;
        /**
         * Background drawable to use for action mode UI
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeBackground = 0x7f010062;
        /**
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCloseButtonStyle = 0x7f010061;
        /**
         * Drawable to use for the close action mode button
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCloseDrawable = 0x7f010064;
        /**
         * Drawable to use for the Copy action button in Contextual Action Bar
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCopyDrawable = 0x7f010066;
        /**
         * Drawable to use for the Cut action button in Contextual Action Bar
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCutDrawable = 0x7f010065;
        /**
         * Drawable to use for the Find action button in WebView selection action modes
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeFindDrawable = 0x7f01006a;
        /**
         * Drawable to use for the Paste action button in Contextual Action Bar
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModePasteDrawable = 0x7f010067;
        /**
         * PopupWindow style to use for action modes when showing as a window overlay.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModePopupWindowStyle = 0x7f01006c;
        /**
         * Drawable to use for the Select all action button in Contextual Action Bar
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeSelectAllDrawable = 0x7f010068;
        /**
         * Drawable to use for the Share action button in WebView selection action modes
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeShareDrawable = 0x7f010069;
        /**
         * Background drawable to use for action mode UI in the lower split bar
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeSplitBackground = 0x7f010063;
        /**
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeStyle = 0x7f010060;
        /**
         * Drawable to use for the Web Search action button in WebView selection action modes
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeWebSearchDrawable = 0x7f01006b;
        /**
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionOverflowButtonStyle = 0x7f010030;
        /**
         * The name of an optional ActionProvider class to instantiate an action view
         * and perform operations such as default action for that menu item.
         * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
         * for more info.
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int actionProviderClass = 0x7f010076;
        /**
         * The name of an optional View class to instantiate and use as an
         * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
         * for more info.
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int actionViewClass = 0x7f010075;
        /**
         * Default ActivityChooserView style.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityChooserViewStyle = 0x7f010092;
        /**
         * The size of the ad. It must be one of BANNER, FULL_BANNER, LEADERBOARD,
         * MEDIUM_RECTANGLE, SMART_BANNER, WIDE_SKYSCRAPER, or
         * &lt;width&gt;x&lt;height&gt;.
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int adSize = 0x7f010000;
        /**
         * A comma-separated list of the supported ad sizes. The sizes must be one of
         * BANNER, FULL_BANNER, LEADERBOARD, MEDIUM_RECTANGLE, SMART_BANNER,
         * WIDE_SKYSCRAPER, or &lt;width&gt;x&lt;height&gt;.
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int adSizes = 0x7f010001;
        /**
         * The ad unit ID.
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int adUnitId = 0x7f010002;
        /**
         * Theme to be used for the Wallet selector
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>holo_dark</code></td><td>0</td><td></td></tr>
         * <tr><td><code>holo_light</code></td><td>1</td><td></td></tr>
         * </table>
         */
        public static final int appTheme = 0x7f010016;
        /**
         * Specifies a background drawable for the action bar.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int background = 0x7f010055;
        /**
         * Specifies a background drawable for the bottom component of a split action bar.
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int backgroundSplit = 0x7f010057;
        /**
         * Specifies a background drawable for a second stacked row of the action bar.
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int backgroundStacked = 0x7f010056;
        /**
         * A style that may be applied to Buttons placed within a
         * LinearLayout with the style buttonBarStyle to form a button bar.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarButtonStyle = 0x7f01003e;
        /**
         * A style that may be applied to horizontal LinearLayouts
         * to form a button bar.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarStyle = 0x7f01003d;
        /**
         * The appearance of the buy button
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>google_wallet_classic</code></td><td>1</td><td></td></tr>
         * <tr><td><code>google_wallet_grayscale</code></td><td>2</td><td></td></tr>
         * <tr><td><code>google_wallet_monochrome</code></td><td>3</td><td></td></tr>
         * <tr><td><code>classic</code></td><td>1</td><td> TODO(waltercacau): Uncomment when Android Pay is launched to all developers:
         * <enum name="android_pay_dark" value="4"/>
         * <enum name="android_pay_light" value="5"/>
         * <enum name="android_pay_light_with_border" value="6"/>
         * Deprecated values </td></tr>
         * <tr><td><code>grayscale</code></td><td>2</td><td></td></tr>
         * <tr><td><code>monochrome</code></td><td>3</td><td></td></tr>
         * </table>
         */
        public static final int buyButtonAppearance = 0x7f01001d;
        /**
         * Height of the buy button. This includes an 8dp padding (4dp on each side) used for
         * pressed and focused states of the button. The value can be a specific height, e.g.
         * "48dp", or special values "match_parent" and "wrap_content".
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>May be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>match_parent</code></td><td>-1</td><td></td></tr>
         * <tr><td><code>wrap_content</code></td><td>-2</td><td></td></tr>
         * </table>
         */
        public static final int buyButtonHeight = 0x7f01001a;
        /**
         * The text on the buy button
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>buy_with</code></td><td>5</td><td></td></tr>
         * <tr><td><code>logo_only</code></td><td>6</td><td></td></tr>
         * <tr><td><code>donate_with</code></td><td>7</td><td></td></tr>
         * <tr><td><code>buy_with_google</code></td><td>1</td><td> Deprecated values </td></tr>
         * <tr><td><code>buy_now</code></td><td>2</td><td></td></tr>
         * <tr><td><code>book_now</code></td><td>3</td><td></td></tr>
         * <tr><td><code>donate_with_google</code></td><td>4</td><td></td></tr>
         * </table>
         */
        public static final int buyButtonText = 0x7f01001c;
        /**
         * Width of the buy button. This includes an 8dp padding (4dp on each side) used for
         * pressed and focused states of the button. The value can be a specific width, e.g.
         * "300dp", or special values "match_parent" and "wrap_content".
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>May be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>match_parent</code></td><td>-1</td><td></td></tr>
         * <tr><td><code>wrap_content</code></td><td>-2</td><td></td></tr>
         * </table>
         */
        public static final int buyButtonWidth = 0x7f01001b;
        /**
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int cameraBearing = 0x7f010007;
        /**
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int cameraTargetLat = 0x7f010008;
        /**
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int cameraTargetLng = 0x7f010009;
        /**
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int cameraTilt = 0x7f01000a;
        /**
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int cameraZoom = 0x7f01000b;
        /**
         * Whether or not this view should have a circular clip applied
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int circleCrop = 0x7f010005;
        /**
         * Specifies a layout for custom navigation. Overrides navigationMode.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int customNavigationLayout = 0x7f010058;
        /**
         * Whether this spinner should mark child views as enabled/disabled when
         * the spinner itself is enabled/disabled.
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int disableChildrenWhenDisabled = 0x7f01007a;
        /**
         * Options affecting how the action bar is displayed.
         * <p>Must be one or more (separated by '|') of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>useLogo</code></td><td>0x1</td><td></td></tr>
         * <tr><td><code>showHome</code></td><td>0x2</td><td></td></tr>
         * <tr><td><code>homeAsUp</code></td><td>0x4</td><td></td></tr>
         * <tr><td><code>showTitle</code></td><td>0x8</td><td></td></tr>
         * <tr><td><code>showCustom</code></td><td>0x10</td><td></td></tr>
         * <tr><td><code>disableHome</code></td><td>0x20</td><td></td></tr>
         * </table>
         */
        public static final int displayOptions = 0x7f01004e;
        /**
         * Specifies the drawable used for item dividers.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int divider = 0x7f010054;
        /**
         * A drawable that may be used as a horizontal divider between visual elements.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dividerHorizontal = 0x7f010041;
        /**
         * Size of padding on either end of a divider.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int dividerPadding = 0x7f01007c;
        /**
         * A drawable that may be used as a vertical divider between visual elements.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dividerVertical = 0x7f010040;
        /**
         * ListPopupWindow comaptibility
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownListViewStyle = 0x7f010047;
        /**
         * The preferred item height for dropdown lists.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int dropdownListPreferredItemHeight = 0x7f01006e;
        /**
         * Google Wallet environment to use
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>production</code></td><td>1</td><td></td></tr>
         * <tr><td><code>test</code></td><td>3</td><td></td></tr>
         * <tr><td><code>sandbox</code></td><td>0</td><td></td></tr>
         * <tr><td><code>strict_sandbox</code></td><td>2</td><td></td></tr>
         * </table>
         */
        public static final int environment = 0x7f010017;
        /**
         * The drawable to show in the button for expanding the activities overflow popup.
         * <strong>Note:</strong> Clients would like to set this drawable
         * as a clue about the action the chosen activity will perform. For
         * example, if share activity is to be chosen the drawable should
         * give a clue that sharing is to be performed.
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int expandActivityOverflowButtonDrawable = 0x7f010091;
        /**
         * Fragment mode
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>buyButton</code></td><td>1</td><td></td></tr>
         * <tr><td><code>selectionDetails</code></td><td>2</td><td></td></tr>
         * </table>
         */
        public static final int fragmentMode = 0x7f010019;
        /**
         * A style resource specifing attributes to customize the look and feel of WalletFragment
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int fragmentStyle = 0x7f010018;
        /**
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int height = 0x7f01004c;
        /**
         * Specifies a drawable to use for the 'home as up' indicator.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int homeAsUpIndicator = 0x7f010039;
        /**
         * Specifies a layout to use for the "home" section of the action bar.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int homeLayout = 0x7f010059;
        /**
         * Specifies the drawable used for the application icon.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int icon = 0x7f010052;
        /**
         * The default state of the SearchView. If true, it will be iconified when not in
         * use and expanded when clicked.
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int iconifiedByDefault = 0x7f010080;
        /**
         * The fixed aspect ratio to use in aspect ratio adjustments.
         * <p/>
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int imageAspectRatio = 0x7f010004;
        /**
         * What kind of aspect ratio adjustment to do.  It must be one of "none", "adjust_width",
         * or "adjust_height".
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>none</code></td><td>0</td><td></td></tr>
         * <tr><td><code>adjust_width</code></td><td>1</td><td></td></tr>
         * <tr><td><code>adjust_height</code></td><td>2</td><td></td></tr>
         * </table>
         */
        public static final int imageAspectRatioAdjust = 0x7f010003;
        /**
         * Specifies a style resource to use for an indeterminate progress spinner.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int indeterminateProgressStyle = 0x7f01005b;
        /**
         * The maximal number of items initially shown in the activity list.
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int initialActivityCount = 0x7f010090;
        /**
         * Specifies whether the theme is light, otherwise it is dark.
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int isLightTheme = 0x7f01007f;
        /**
         * Specifies padding that should be applied to the left and right sides of
         * system-provided items in the bar.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int itemPadding = 0x7f01005d;
        /**
         * Drawable used as a background for selected list items.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listChoiceBackgroundIndicator = 0x7f010072;
        /**
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listPopupWindowStyle = 0x7f010048;
        /**
         * The preferred list item height.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int listPreferredItemHeight = 0x7f010042;
        /**
         * A larger, more robust list item height.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int listPreferredItemHeightLarge = 0x7f010044;
        /**
         * A smaller, sleeker list item height.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int listPreferredItemHeightSmall = 0x7f010043;
        /**
         * The preferred padding along the left edge of list items.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int listPreferredItemPaddingLeft = 0x7f010045;
        /**
         * The preferred padding along the right edge of list items.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int listPreferredItemPaddingRight = 0x7f010046;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int liteMode = 0x7f01000c;
        /**
         * Specifies the drawable used for the application logo.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int logo = 0x7f010053;
        /**
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>none</code></td><td>0</td><td></td></tr>
         * <tr><td><code>normal</code></td><td>1</td><td></td></tr>
         * <tr><td><code>satellite</code></td><td>2</td><td></td></tr>
         * <tr><td><code>terrain</code></td><td>3</td><td></td></tr>
         * <tr><td><code>hybrid</code></td><td>4</td><td></td></tr>
         * </table>
         */
        public static final int mapType = 0x7f010006;
        /**
         * Masked wallet details background
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int maskedWalletDetailsBackground = 0x7f010020;
        /**
         * "Change" button background in masked wallet details view
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int maskedWalletDetailsButtonBackground = 0x7f010022;
        /**
         * TextAppearance for the "Change" button in masked wallet details view
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int maskedWalletDetailsButtonTextAppearance = 0x7f010021;
        /**
         * TextAppearance for headers describing masked wallet details
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int maskedWalletDetailsHeaderTextAppearance = 0x7f01001f;
        /**
         * Type of the wallet logo image in masked wallet details view
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>google_wallet_classic</code></td><td>1</td><td></td></tr>
         * <tr><td><code>google_wallet_monochrome</code></td><td>2</td><td></td></tr>
         * <tr><td><code>classic</code></td><td>1</td><td> TODO(waltercacau): Uncomment when Android Pay is launched to all developers:
         * <enum name="android_pay" value="3"/>
         * Deprecated values </td></tr>
         * <tr><td><code>monochrome</code></td><td>2</td><td></td></tr>
         * </table>
         */
        public static final int maskedWalletDetailsLogoImageType = 0x7f010024;
        /**
         * Color of the Google Wallet logo text in masked wallet details view
         * <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int maskedWalletDetailsLogoTextColor = 0x7f010023;
        /**
         * TextAppearance for masked wallet details
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int maskedWalletDetailsTextAppearance = 0x7f01001e;
        /**
         * The type of navigation to use.
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>normal</code></td><td>0</td><td> Normal static title text </td></tr>
         * <tr><td><code>listMode</code></td><td>1</td><td> The action bar will use a selection list for navigation. </td></tr>
         * <tr><td><code>tabMode</code></td><td>2</td><td> The action bar will use a series of horizontal tabs for navigation. </td></tr>
         * </table>
         */
        public static final int navigationMode = 0x7f01004d;
        /**
         * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int paddingEnd = 0x7f01005f;
        /**
         * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int paddingStart = 0x7f01005e;
        /**
         * Default Panel Menu style.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int panelMenuListTheme = 0x7f010071;
        /**
         * Default Panel Menu width.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int panelMenuListWidth = 0x7f010070;
        /**
         * Default PopupMenu style.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupMenuStyle = 0x7f01006f;
        /**
         * Reference to a layout to use for displaying a prompt in the dropdown for
         * spinnerMode="dropdown". This layout must contain a TextView with the id
         * {@code @android:id/text1} to be populated with the prompt text.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupPromptView = 0x7f010079;
        /**
         * Specifies the horizontal padding on either end for an embedded progress bar.
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int progressBarPadding = 0x7f01005c;
        /**
         * Specifies a style resource to use for an embedded progress bar.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyle = 0x7f01005a;
        /**
         * The prompt to display when the spinner's dialog is shown.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int prompt = 0x7f010077;
        /**
         * An optional query hint string to be displayed in the empty query field.
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int queryHint = 0x7f010081;
        /**
         * SearchView dropdown background
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchDropdownBackground = 0x7f010082;
        /**
         * The list item height for search results. @hide
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int searchResultListItemHeight = 0x7f01008b;
        /**
         * SearchView AutoCompleteTextView style
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewAutoCompleteTextView = 0x7f01008f;
        /**
         * SearchView close button icon
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewCloseIcon = 0x7f010083;
        /**
         * SearchView query refinement icon
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewEditQuery = 0x7f010087;
        /**
         * SearchView query refinement icon background
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewEditQueryBackground = 0x7f010088;
        /**
         * SearchView Go button icon
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewGoIcon = 0x7f010084;
        /**
         * SearchView Search icon
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewSearchIcon = 0x7f010085;
        /**
         * SearchView text field background for the left section
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewTextField = 0x7f010089;
        /**
         * SearchView text field background for the right section
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewTextFieldRight = 0x7f01008a;
        /**
         * SearchView Voice button icon
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewVoiceIcon = 0x7f010086;
        /**
         * A style that may be applied to buttons or other selectable items
         * that should react to pressed and focus states, but that do not
         * have a clear visual border along the edges.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int selectableItemBackground = 0x7f01003f;
        /**
         * How this item should display in the Action Bar, if present.
         * <p>Must be one or more (separated by '|') of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>never</code></td><td>0</td><td> Never show this item in an action bar, show it in the overflow menu instead.
         * Mutually exclusive with "ifRoom" and "always". </td></tr>
         * <tr><td><code>ifRoom</code></td><td>1</td><td> Show this item in an action bar if there is room for it as determined
         * by the system. Favor this option over "always" where possible.
         * Mutually exclusive with "never" and "always". </td></tr>
         * <tr><td><code>always</code></td><td>2</td><td> Always show this item in an actionbar, even if it would override
         * the system's limits of how much stuff to put there. This may make
         * your action bar look bad on some screens. In most cases you should
         * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never". </td></tr>
         * <tr><td><code>withText</code></td><td>4</td><td> When this item is shown as an action in the action bar, show a text
         * label with it even if it has an icon representation. </td></tr>
         * <tr><td><code>collapseActionView</code></td><td>8</td><td> This item's action view collapses to a normal menu
         * item. When expanded, the action view takes over a
         * larger segment of its container. </td></tr>
         * </table>
         */
        public static final int showAsAction = 0x7f010073;
        /**
         * Setting for which dividers to show.
         * <p>Must be one or more (separated by '|') of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>none</code></td><td>0</td><td></td></tr>
         * <tr><td><code>beginning</code></td><td>1</td><td></td></tr>
         * <tr><td><code>middle</code></td><td>2</td><td></td></tr>
         * <tr><td><code>end</code></td><td>4</td><td></td></tr>
         * </table>
         */
        public static final int showDividers = 0x7f01007b;
        /**
         * Default Spinner style.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerDropDownItemStyle = 0x7f01007e;
        /**
         * Display mode for spinner options.
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>dialog</code></td><td>0</td><td> Spinner options will be presented to the user as a dialog window. </td></tr>
         * <tr><td><code>dropdown</code></td><td>1</td><td> Spinner options will be presented to the user as an inline dropdown
         * anchored to the spinner widget itself. </td></tr>
         * </table>
         */
        public static final int spinnerMode = 0x7f010078;
        /**
         * Default Spinner style.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerStyle = 0x7f01007d;
        /**
         * Specifies subtitle text used for navigationMode="normal"
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int subtitle = 0x7f01004f;
        /**
         * Specifies a style to use for subtitle text.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int subtitleTextStyle = 0x7f010051;
        /**
         * Present the text in ALL CAPS. This may use a small-caps form when available.
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int textAllCaps = 0x7f010093;
        /**
         * Text color, typeface, size, and style for the text inside of a popup menu.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceLargePopupMenu = 0x7f01003a;
        /**
         * The preferred TextAppearance for the primary text of list items.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceListItem = 0x7f010049;
        /**
         * The preferred TextAppearance for the primary text of small list items.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceListItemSmall = 0x7f01004a;
        /**
         * Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSearchResultSubtitle = 0x7f01008d;
        /**
         * Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSearchResultTitle = 0x7f01008c;
        /**
         * Text color, typeface, size, and style for small text inside of a popup menu.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSmallPopupMenu = 0x7f01003b;
        /**
         * Text color for urls in search suggestions, used by things like global search
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSearchUrl = 0x7f01008e;
        /**
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int title = 0x7f01004b;
        /**
         * Specifies a style to use for title text.
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int titleTextStyle = 0x7f010050;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int uiCompass = 0x7f01000d;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int uiMapToolbar = 0x7f010015;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int uiRotateGestures = 0x7f01000e;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int uiScrollGestures = 0x7f01000f;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int uiTiltGestures = 0x7f010010;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int uiZoomControls = 0x7f010011;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int uiZoomGestures = 0x7f010012;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int useViewLifecycle = 0x7f010013;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int windowActionBar = 0x7f010026;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int windowActionBarOverlay = 0x7f010027;
        /**
         * A fixed height for the window along the major axis of the screen,
         * that is, when in portrait. Can be either an absolute dimension
         * or a fraction of the screen size in that dimension.
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
         * The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
         * some parent container.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int windowFixedHeightMajor = 0x7f01002c;
        /**
         * A fixed height for the window along the minor axis of the screen,
         * that is, when in landscape. Can be either an absolute dimension
         * or a fraction of the screen size in that dimension.
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
         * The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
         * some parent container.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int windowFixedHeightMinor = 0x7f01002a;
        /**
         * A fixed width for the window along the major axis of the screen,
         * that is, when in landscape. Can be either an absolute dimension
         * or a fraction of the screen size in that dimension.
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
         * The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
         * some parent container.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int windowFixedWidthMajor = 0x7f010029;
        /**
         * A fixed width for the window along the minor axis of the screen,
         * that is, when in portrait. Can be either an absolute dimension
         * or a fraction of the screen size in that dimension.
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
         * The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
         * some parent container.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int windowFixedWidthMinor = 0x7f01002b;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int windowSplitActionBar = 0x7f010028;
        /**
         * Defines the set of transition to be used between activities
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>slide</code></td><td>1</td><td></td></tr>
         * <tr><td><code>none</code></td><td>2</td><td></td></tr>
         * </table>
         */
        public static final int windowTransitionStyle = 0x7f010025;
        /**
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         */
        public static final int zOrderOnTop = 0x7f010014;
    }

    public static final class bool {
        public static final int abc_action_bar_embed_tabs_pre_jb = 0x7f0c0000;
        public static final int abc_action_bar_expanded_action_views_exclusive = 0x7f0c0001;
        /**
         * Whether action menu items should be displayed in ALLCAPS or not.
         * Defaults to true. If this is not appropriate for specific locales
         * it should be disabled in that locale's resources.
         */
        public static final int abc_config_actionMenuItemAllCaps = 0x7f0c0005;
        /**
         * Whether action menu items should obey the "withText" showAsAction
         * flag. This may be set to false for situations where space is
         * extremely limited.
         * Whether action menu items should obey the "withText" showAsAction.
         * This may be set to false for situations where space is
         * extremely limited.
         */
        public static final int abc_config_allowActionMenuItemTextWithIcon = 0x7f0c0004;
        public static final int abc_config_showMenuShortcutsWhenKeyboardPresent = 0x7f0c0003;
        public static final int abc_split_action_bar_is_narrow = 0x7f0c0002;
    }

    public static final class color {
        public static final int abc_search_url_text_holo = 0x7f0a0025;
        public static final int abc_search_url_text_normal = 0x7f0a0017;
        public static final int abc_search_url_text_pressed = 0x7f0a0019;
        public static final int abc_search_url_text_selected = 0x7f0a0018;
        public static final int black = 0x7f0a001b;
        public static final int blue = 0x7f0a001c;
        public static final int common_action_bar_splitter = 0x7f0a0009;
        /**
         * Sign-in Button Colors
         */
        public static final int common_signin_btn_dark_text_default = 0x7f0a0000;
        public static final int common_signin_btn_dark_text_disabled = 0x7f0a0002;
        public static final int common_signin_btn_dark_text_focused = 0x7f0a0003;
        public static final int common_signin_btn_dark_text_pressed = 0x7f0a0001;
        public static final int common_signin_btn_default_background = 0x7f0a0008;
        public static final int common_signin_btn_light_text_default = 0x7f0a0004;
        public static final int common_signin_btn_light_text_disabled = 0x7f0a0006;
        public static final int common_signin_btn_light_text_focused = 0x7f0a0007;
        public static final int common_signin_btn_light_text_pressed = 0x7f0a0005;
        public static final int common_signin_btn_text_dark = 0x7f0a0026;
        public static final int common_signin_btn_text_light = 0x7f0a0027;
        public static final int cyan = 0x7f0a0022;
        public static final int darkgray = 0x7f0a0024;
        public static final int darkgray1 = 0x7f0a0023;
        public static final int green = 0x7f0a0020;
        public static final int grey = 0x7f0a0021;
        public static final int red = 0x7f0a001e;
        public static final int skyblue = 0x7f0a001f;
        public static final int transparent = 0x7f0a001d;
        public static final int wallet_bright_foreground_disabled_holo_light = 0x7f0a000f;
        /**
         * Wallet colors to support consistent Wallet fragment holo dark UI in client application
         * regardless of the theme and device type
         */
        public static final int wallet_bright_foreground_holo_dark = 0x7f0a000a;
        public static final int wallet_bright_foreground_holo_light = 0x7f0a0010;
        public static final int wallet_dim_foreground_disabled_holo_dark = 0x7f0a000c;
        public static final int wallet_dim_foreground_holo_dark = 0x7f0a000b;
        public static final int wallet_dim_foreground_inverse_disabled_holo_dark = 0x7f0a000e;
        public static final int wallet_dim_foreground_inverse_holo_dark = 0x7f0a000d;
        public static final int wallet_highlighted_text_holo_dark = 0x7f0a0014;
        public static final int wallet_highlighted_text_holo_light = 0x7f0a0013;
        public static final int wallet_hint_foreground_holo_dark = 0x7f0a0012;
        public static final int wallet_hint_foreground_holo_light = 0x7f0a0011;
        public static final int wallet_holo_blue_light = 0x7f0a0015;
        public static final int wallet_link_text_light = 0x7f0a0016;
        public static final int wallet_primary_text_holo_light = 0x7f0a0028;
        public static final int wallet_secondary_text_holo_dark = 0x7f0a0029;
        public static final int white = 0x7f0a001a;
    }

    public static final class dimen {
        /**
         * Default height of an action bar.
         * Default height of an action bar.
         * Default height of an action bar.
         * Default height of an action bar.
         * Default height of an action bar.
         */
        public static final int abc_action_bar_default_height = 0x7f0d0002;
        /**
         * Vertical padding around action bar icons.
         * Vertical padding around action bar icons.
         * Vertical padding around action bar icons.
         * Vertical padding around action bar icons.
         * Vertical padding around action bar icons.
         */
        public static final int abc_action_bar_icon_vertical_padding = 0x7f0d0003;
        /**
         * Size of the indeterminate Progress Bar
         * Size of the indeterminate Progress Bar
         */
        public static final int abc_action_bar_progress_bar_size = 0x7f0d000a;
        /**
         * Maximum height for a stacked tab bar as part of an action bar
         */
        public static final int abc_action_bar_stacked_max_height = 0x7f0d0009;
        /**
         * Maximum width for a stacked action bar tab. This prevents
         * action bar tabs from becoming too wide on a wide screen when only
         * a few are present.
         */
        public static final int abc_action_bar_stacked_tab_max_width = 0x7f0d0001;
        /**
         * Bottom margin for action bar subtitles
         * Bottom margin for action bar subtitles
         * Bottom margin for action bar subtitles
         * Bottom margin for action bar subtitles
         * Bottom margin for action bar subtitles
         */
        public static final int abc_action_bar_subtitle_bottom_margin = 0x7f0d0007;
        /**
         * Text size for action bar subtitles
         * Text size for action bar subtitles
         * Text size for action bar subtitles
         * Text size for action bar subtitles
         * Text size for action bar subtitles
         */
        public static final int abc_action_bar_subtitle_text_size = 0x7f0d0005;
        /**
         * Top margin for action bar subtitles
         * Top margin for action bar subtitles
         * Top margin for action bar subtitles
         * Top margin for action bar subtitles
         * Top margin for action bar subtitles
         */
        public static final int abc_action_bar_subtitle_top_margin = 0x7f0d0006;
        /**
         * Text size for action bar titles
         * Text size for action bar titles
         * Text size for action bar titles
         * Text size for action bar titles
         * Text size for action bar titles
         */
        public static final int abc_action_bar_title_text_size = 0x7f0d0004;
        /**
         * Minimum width for an action button in the menu area of an action bar
         * Minimum width for an action button in the menu area of an action bar
         * Minimum width for an action button in the menu area of an action bar
         */
        public static final int abc_action_button_min_width = 0x7f0d0008;
        /**
         * The maximum width we would prefer dialogs to be.  0 if there is no
         * maximum (let them grow as large as the screen).  Actual values are
         * specified for -large and -xlarge configurations.
         * see comment in values/config.xml
         * see comment in values/config.xml
         */
        public static final int abc_config_prefDialogWidth = 0x7f0d0000;
        /**
         * Width of the icon in a dropdown list
         */
        public static final int abc_dropdownitem_icon_width = 0x7f0d0010;
        /**
         * Text padding for dropdown items
         */
        public static final int abc_dropdownitem_text_padding_left = 0x7f0d000e;
        public static final int abc_dropdownitem_text_padding_right = 0x7f0d000f;
        public static final int abc_panel_menu_list_width = 0x7f0d000b;
        /**
         * Preferred width of the search view.
         */
        public static final int abc_search_view_preferred_width = 0x7f0d000d;
        /**
         * Minimum width of the search view text entry area.
         * Minimum width of the search view text entry area.
         * Minimum width of the search view text entry area.
         * Minimum width of the search view text entry area.
         */
        public static final int abc_search_view_text_min_width = 0x7f0d000c;
        /**
         * Default screen margins, per the Android Design guidelines.
         * <p/>
         * Example customization of dimensions originally defined in res/values/dimens.xml
         * (such as screen margins) for screens with more than 820dp of available width. This
         * would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively).
         */
        public static final int activity_horizontal_margin = 0x7f0d0015;
        public static final int activity_vertical_margin = 0x7f0d0016;
        /**
         * The platform's desired fixed height for a dialog along the major axis
         * (the screen is in portrait). This may be either a fraction or a dimension.
         * The platform's desired fixed height for a dialog along the major axis
         * (the screen is in portrait). This may be either a fraction or a dimension.
         * The platform's desired fixed height for a dialog along the major axis
         * (the screen is in portrait). This may be either a fraction or a dimension.
         */
        public static final int dialog_fixed_height_major = 0x7f0d0013;
        /**
         * The platform's desired fixed height for a dialog along the minor axis
         * (the screen is in landscape). This may be either a fraction or a dimension.
         * The platform's desired fixed height for a dialog along the minor axis
         * (the screen is in landscape). This may be either a fraction or a dimension.
         * The platform's desired fixed height for a dialog along the minor axis
         * (the screen is in landscape). This may be either a fraction or a dimension.
         */
        public static final int dialog_fixed_height_minor = 0x7f0d0014;
        /**
         * The platform's desired fixed width for a dialog along the major axis
         * (the screen is in landscape). This may be either a fraction or a dimension.
         * The platform's desired fixed width for a dialog along the major axis
         * (the screen is in landscape). This may be either a fraction or a dimension.
         * The platform's desired fixed width for a dialog along the major axis
         * (the screen is in landscape). This may be either a fraction or a dimension.
         */
        public static final int dialog_fixed_width_major = 0x7f0d0011;
        /**
         * The platform's desired fixed width for a dialog along the minor axis
         * (the screen is in portrait). This may be either a fraction or a dimension.
         * The platform's desired fixed width for a dialog along the minor axis
         * (the screen is in portrait). This may be either a fraction or a dimension.
         * The platform's desired fixed width for a dialog along the minor axis
         * (the screen is in portrait). This may be either a fraction or a dimension.
         */
        public static final int dialog_fixed_width_minor = 0x7f0d0012;
    }

    public static final class drawable {
        public static final int abc_ab_bottom_solid_dark_holo = 0x7f020000;
        public static final int abc_ab_bottom_solid_light_holo = 0x7f020001;
        public static final int abc_ab_bottom_transparent_dark_holo = 0x7f020002;
        public static final int abc_ab_bottom_transparent_light_holo = 0x7f020003;
        public static final int abc_ab_share_pack_holo_dark = 0x7f020004;
        public static final int abc_ab_share_pack_holo_light = 0x7f020005;
        public static final int abc_ab_solid_dark_holo = 0x7f020006;
        public static final int abc_ab_solid_light_holo = 0x7f020007;
        public static final int abc_ab_stacked_solid_dark_holo = 0x7f020008;
        public static final int abc_ab_stacked_solid_light_holo = 0x7f020009;
        public static final int abc_ab_stacked_transparent_dark_holo = 0x7f02000a;
        public static final int abc_ab_stacked_transparent_light_holo = 0x7f02000b;
        public static final int abc_ab_transparent_dark_holo = 0x7f02000c;
        public static final int abc_ab_transparent_light_holo = 0x7f02000d;
        public static final int abc_cab_background_bottom_holo_dark = 0x7f02000e;
        public static final int abc_cab_background_bottom_holo_light = 0x7f02000f;
        public static final int abc_cab_background_top_holo_dark = 0x7f020010;
        public static final int abc_cab_background_top_holo_light = 0x7f020011;
        public static final int abc_ic_ab_back_holo_dark = 0x7f020012;
        public static final int abc_ic_ab_back_holo_light = 0x7f020013;
        public static final int abc_ic_cab_done_holo_dark = 0x7f020014;
        public static final int abc_ic_cab_done_holo_light = 0x7f020015;
        public static final int abc_ic_clear = 0x7f020016;
        public static final int abc_ic_clear_disabled = 0x7f020017;
        public static final int abc_ic_clear_holo_light = 0x7f020018;
        public static final int abc_ic_clear_normal = 0x7f020019;
        public static final int abc_ic_clear_search_api_disabled_holo_light = 0x7f02001a;
        public static final int abc_ic_clear_search_api_holo_light = 0x7f02001b;
        public static final int abc_ic_commit_search_api_holo_dark = 0x7f02001c;
        public static final int abc_ic_commit_search_api_holo_light = 0x7f02001d;
        public static final int abc_ic_go = 0x7f02001e;
        public static final int abc_ic_go_search_api_holo_light = 0x7f02001f;
        public static final int abc_ic_menu_moreoverflow_normal_holo_dark = 0x7f020020;
        public static final int abc_ic_menu_moreoverflow_normal_holo_light = 0x7f020021;
        public static final int abc_ic_menu_share_holo_dark = 0x7f020022;
        public static final int abc_ic_menu_share_holo_light = 0x7f020023;
        public static final int abc_ic_search = 0x7f020024;
        public static final int abc_ic_search_api_holo_light = 0x7f020025;
        public static final int abc_ic_voice_search = 0x7f020026;
        public static final int abc_ic_voice_search_api_holo_light = 0x7f020027;
        public static final int abc_item_background_holo_dark = 0x7f020028;
        public static final int abc_item_background_holo_light = 0x7f020029;
        public static final int abc_list_divider_holo_dark = 0x7f02002a;
        public static final int abc_list_divider_holo_light = 0x7f02002b;
        public static final int abc_list_focused_holo = 0x7f02002c;
        public static final int abc_list_longpressed_holo = 0x7f02002d;
        public static final int abc_list_pressed_holo_dark = 0x7f02002e;
        public static final int abc_list_pressed_holo_light = 0x7f02002f;
        public static final int abc_list_selector_background_transition_holo_dark = 0x7f020030;
        public static final int abc_list_selector_background_transition_holo_light = 0x7f020031;
        public static final int abc_list_selector_disabled_holo_dark = 0x7f020032;
        public static final int abc_list_selector_disabled_holo_light = 0x7f020033;
        public static final int abc_list_selector_holo_dark = 0x7f020034;
        public static final int abc_list_selector_holo_light = 0x7f020035;
        public static final int abc_menu_dropdown_panel_holo_dark = 0x7f020036;
        public static final int abc_menu_dropdown_panel_holo_light = 0x7f020037;
        public static final int abc_menu_hardkey_panel_holo_dark = 0x7f020038;
        public static final int abc_menu_hardkey_panel_holo_light = 0x7f020039;
        public static final int abc_search_dropdown_dark = 0x7f02003a;
        public static final int abc_search_dropdown_light = 0x7f02003b;
        public static final int abc_spinner_ab_default_holo_dark = 0x7f02003c;
        public static final int abc_spinner_ab_default_holo_light = 0x7f02003d;
        public static final int abc_spinner_ab_disabled_holo_dark = 0x7f02003e;
        public static final int abc_spinner_ab_disabled_holo_light = 0x7f02003f;
        public static final int abc_spinner_ab_focused_holo_dark = 0x7f020040;
        public static final int abc_spinner_ab_focused_holo_light = 0x7f020041;
        public static final int abc_spinner_ab_holo_dark = 0x7f020042;
        public static final int abc_spinner_ab_holo_light = 0x7f020043;
        public static final int abc_spinner_ab_pressed_holo_dark = 0x7f020044;
        public static final int abc_spinner_ab_pressed_holo_light = 0x7f020045;
        public static final int abc_tab_indicator_ab_holo = 0x7f020046;
        public static final int abc_tab_selected_focused_holo = 0x7f020047;
        public static final int abc_tab_selected_holo = 0x7f020048;
        public static final int abc_tab_selected_pressed_holo = 0x7f020049;
        public static final int abc_tab_unselected_pressed_holo = 0x7f02004a;
        public static final int abc_textfield_search_default_holo_dark = 0x7f02004b;
        public static final int abc_textfield_search_default_holo_light = 0x7f02004c;
        public static final int abc_textfield_search_right_default_holo_dark = 0x7f02004d;
        public static final int abc_textfield_search_right_default_holo_light = 0x7f02004e;
        public static final int abc_textfield_search_right_selected_holo_dark = 0x7f02004f;
        public static final int abc_textfield_search_right_selected_holo_light = 0x7f020050;
        public static final int abc_textfield_search_selected_holo_dark = 0x7f020051;
        public static final int abc_textfield_search_selected_holo_light = 0x7f020052;
        public static final int abc_textfield_searchview_holo_dark = 0x7f020053;
        public static final int abc_textfield_searchview_holo_light = 0x7f020054;
        public static final int abc_textfield_searchview_right_holo_dark = 0x7f020055;
        public static final int abc_textfield_searchview_right_holo_light = 0x7f020056;
        public static final int activities_text = 0x7f020057;
        public static final int cast_ic_notification_0 = 0x7f020058;
        public static final int cast_ic_notification_1 = 0x7f020059;
        public static final int cast_ic_notification_2 = 0x7f02005a;
        public static final int cast_ic_notification_connecting = 0x7f02005b;
        public static final int cast_ic_notification_on = 0x7f02005c;
        public static final int common_full_open_on_phone = 0x7f02005d;
        public static final int common_ic_googleplayservices = 0x7f02005e;
        public static final int common_signin_btn_icon_dark = 0x7f02005f;
        public static final int common_signin_btn_icon_disabled_dark = 0x7f020060;
        public static final int common_signin_btn_icon_disabled_focus_dark = 0x7f020061;
        public static final int common_signin_btn_icon_disabled_focus_light = 0x7f020062;
        public static final int common_signin_btn_icon_disabled_light = 0x7f020063;
        public static final int common_signin_btn_icon_focus_dark = 0x7f020064;
        public static final int common_signin_btn_icon_focus_light = 0x7f020065;
        public static final int common_signin_btn_icon_light = 0x7f020066;
        public static final int common_signin_btn_icon_normal_dark = 0x7f020067;
        public static final int common_signin_btn_icon_normal_light = 0x7f020068;
        public static final int common_signin_btn_icon_pressed_dark = 0x7f020069;
        public static final int common_signin_btn_icon_pressed_light = 0x7f02006a;
        public static final int common_signin_btn_text_dark = 0x7f02006b;
        public static final int common_signin_btn_text_disabled_dark = 0x7f02006c;
        public static final int common_signin_btn_text_disabled_focus_dark = 0x7f02006d;
        public static final int common_signin_btn_text_disabled_focus_light = 0x7f02006e;
        public static final int common_signin_btn_text_disabled_light = 0x7f02006f;
        public static final int common_signin_btn_text_focus_dark = 0x7f020070;
        public static final int common_signin_btn_text_focus_light = 0x7f020071;
        public static final int common_signin_btn_text_light = 0x7f020072;
        public static final int common_signin_btn_text_normal_dark = 0x7f020073;
        public static final int common_signin_btn_text_normal_light = 0x7f020074;
        public static final int common_signin_btn_text_pressed_dark = 0x7f020075;
        public static final int common_signin_btn_text_pressed_light = 0x7f020076;
        public static final int e1001 = 0x7f020077;
        public static final int ele = 0x7f020078;
        public static final int elep = 0x7f020079;
        public static final int eleph = 0x7f02007a;
        public static final int elepone = 0x7f02007b;
        public static final int elepthree = 0x7f02007c;
        public static final int eleptwo = 0x7f02007d;
        public static final int forthactive = 0x7f02007e;
        public static final int grey_shape = 0x7f02007f;
        public static final int history_text = 0x7f020080;
        public static final int historyfinal = 0x7f020081;
        public static final int historypic = 0x7f020082;
        public static final int ic_action_refresh = 0x7f020083;
        public static final int ic_launcher = 0x7f020084;
        public static final int ic_plusone_medium_off_client = 0x7f020085;
        public static final int ic_plusone_small_off_client = 0x7f020086;
        public static final int ic_plusone_standard_off_client = 0x7f020087;
        public static final int ic_plusone_tall_off_client = 0x7f020088;
        public static final int loginfin = 0x7f020089;
        public static final int pass = 0x7f02008a;
        public static final int password = 0x7f02008b;
        public static final int photofinalfour = 0x7f02008c;
        public static final int photofinalone = 0x7f02008d;
        public static final int photofinalthree = 0x7f02008e;
        public static final int photos = 0x7f02008f;
        public static final int pic = 0x7f020090;
        public static final int powered_by_google_dark = 0x7f020091;
        public static final int powered_by_google_light = 0x7f020092;
        public static final int profile = 0x7f020093;
        public static final int profiletext = 0x7f020094;
        public static final int shape_edittext = 0x7f020095;
        public static final int shape_yellow = 0x7f020096;
        public static final int username = 0x7f020097;
    }

    public static final class id {
        public static final int LayMain = 0x7f090076;
        public static final int LinearLogin1 = 0x7f09006e;
        public static final int LinearLogin2 = 0x7f090070;
        public static final int LogineditText1 = 0x7f09006f;
        public static final int LogineditText2 = 0x7f090071;
        public static final int Loginsignupbutton1 = 0x7f090073;
        public static final int action_bar = 0x7f09003a;
        public static final int action_bar_activity_content = 0x7f090002;
        public static final int action_bar_container = 0x7f090039;
        public static final int action_bar_overlay_layout = 0x7f09003d;
        public static final int action_bar_root = 0x7f090038;
        public static final int action_bar_subtitle = 0x7f090041;
        public static final int action_bar_title = 0x7f090040;
        public static final int action_context_bar = 0x7f09003b;
        public static final int action_menu_divider = 0x7f090003;
        public static final int action_menu_presenter = 0x7f090004;
        public static final int action_mode_close_button = 0x7f090042;
        public static final int action_refresh = 0x7f0900ce;
        public static final int activitiesview = 0x7f090060;
        public static final int activity_chooser_view_content = 0x7f090043;
        public static final int adjust_height = 0x7f090007;
        public static final int adjust_width = 0x7f090008;
        public static final int always = 0x7f09002e;
        public static final int beginning = 0x7f090035;
        public static final int book_now = 0x7f090018;
        public static final int buyButton = 0x7f090014;
        public static final int buy_now = 0x7f090019;
        public static final int buy_with = 0x7f09001a;
        public static final int buy_with_google = 0x7f09001b;
        public static final int cast_notification_id = 0x7f090000;
        public static final int checkBoxlogin = 0x7f090072;
        public static final int checkbox = 0x7f09004b;
        public static final int classic = 0x7f09001f;
        public static final int collapseActionView = 0x7f09002f;
        public static final int default_activity_button = 0x7f090046;
        public static final int dialog = 0x7f090033;
        public static final int disableHome = 0x7f090028;
        public static final int donate_with = 0x7f09001c;
        public static final int donate_with_google = 0x7f09001d;
        public static final int dropdown = 0x7f090034;
        public static final int edit_query = 0x7f09004e;
        public static final int end = 0x7f090036;
        public static final int expand_activities_button = 0x7f090044;
        public static final int expanded_menu = 0x7f09004a;
        public static final int footerthree = 0x7f0900be;
        public static final int google_wallet_classic = 0x7f090020;
        public static final int google_wallet_grayscale = 0x7f090021;
        public static final int google_wallet_monochrome = 0x7f090022;
        public static final int grayscale = 0x7f090023;
        public static final int gridviewone = 0x7f09005b;
        public static final int gridviewtwo = 0x7f09005e;
        public static final int hisotorytype = 0x7f090064;
        public static final int historyheader = 0x7f090061;
        public static final int historylay1 = 0x7f090063;
        public static final int historyradiolay = 0x7f090066;
        public static final int historyview = 0x7f09005f;
        public static final int holo_dark = 0x7f09000e;
        public static final int holo_light = 0x7f09000f;
        public static final int home = 0x7f090001;
        public static final int homeAsUp = 0x7f090029;
        public static final int hybrid = 0x7f09000a;
        public static final int icon = 0x7f090048;
        public static final int ifRoom = 0x7f090030;
        public static final int image = 0x7f090045;
        public static final int lay1 = 0x7f090077;
        public static final int lay10 = 0x7f090097;
        public static final int lay11 = 0x7f09009b;
        public static final int lay2 = 0x7f09007b;
        public static final int lay3 = 0x7f09007f;
        public static final int lay4 = 0x7f090083;
        public static final int lay6 = 0x7f090087;
        public static final int lay7 = 0x7f09008b;
        public static final int lay8 = 0x7f09008f;
        public static final int lay9 = 0x7f090093;
        public static final int layselect1 = 0x7f0900a1;
        public static final int layselect2 = 0x7f0900a5;
        public static final int layselect3 = 0x7f0900a9;
        public static final int layselect4 = 0x7f0900b0;
        public static final int layselect5 = 0x7f0900b4;
        public static final int linearLayout1 = 0x7f0900ba;
        public static final int listMode = 0x7f090026;
        public static final int listProjects = 0x7f0900c2;
        public static final int listViewhistory = 0x7f09006c;
        public static final int list_item = 0x7f090047;
        public static final int listelephants = 0x7f0900bd;
        public static final int logo_only = 0x7f09001e;
        public static final int match_parent = 0x7f090016;
        public static final int middle = 0x7f090037;
        public static final int monochrome = 0x7f090024;
        public static final int never = 0x7f090031;
        public static final int none = 0x7f090009;
        public static final int normal = 0x7f09000b;
        public static final int photosview = 0x7f09005c;
        public static final int production = 0x7f090010;
        public static final int profileID = 0x7f090078;
        public static final int profileage = 0x7f090088;
        public static final int profilebrought = 0x7f090098;
        public static final int profilechip = 0x7f09008c;
        public static final int profilelocation = 0x7f090094;
        public static final int profilename = 0x7f090080;
        public static final int profileowner = 0x7f09009c;
        public static final int profilepic = 0x7f09007c;
        public static final int profilesextype = 0x7f090084;
        public static final int profileview = 0x7f09005d;
        public static final int profilework = 0x7f090090;
        public static final int progress_circular = 0x7f090005;
        public static final int progress_horizontal = 0x7f090006;
        public static final int radio = 0x7f09004d;
        public static final int radioButtongroup = 0x7f0900ac;
        public static final int radioButtonnone = 0x7f0900ad;
        public static final int radioButtontreat = 0x7f0900ae;
        public static final int radioButtonvaccin = 0x7f0900af;
        public static final int radiohistoryall = 0x7f090068;
        public static final int radiohistorygroup = 0x7f090067;
        public static final int radiohistorynone = 0x7f09006b;
        public static final int radiohistorytreat = 0x7f090069;
        public static final int radiohistoryvaccin = 0x7f09006a;
        public static final int relMainApp = 0x7f09006d;
        public static final int sandbox = 0x7f090011;
        public static final int satellite = 0x7f09000c;
        public static final int search_badge = 0x7f090050;
        public static final int search_bar = 0x7f09004f;
        public static final int search_button = 0x7f090051;
        public static final int search_close_btn = 0x7f090056;
        public static final int search_edit_frame = 0x7f090052;
        public static final int search_go_btn = 0x7f090058;
        public static final int search_mag_icon = 0x7f090053;
        public static final int search_plate = 0x7f090054;
        public static final int search_src_text = 0x7f090055;
        public static final int search_voice_btn = 0x7f090059;
        public static final int secondlay = 0x7f0900bf;
        public static final int secondtext = 0x7f0900c1;
        public static final int secondtext2 = 0x7f0900bc;
        public static final int selectdate = 0x7f0900a2;
        public static final int selectdiscription = 0x7f0900b5;
        public static final int selectedprofilelay = 0x7f090074;
        public static final int selectheader = 0x7f09009f;
        public static final int selectionDetails = 0x7f090015;
        public static final int selectsubmit = 0x7f0900b8;
        public static final int selectsubmit1 = 0x7f0900b9;
        public static final int selecttime = 0x7f0900a6;
        public static final int selecttitle = 0x7f0900b1;
        public static final int selecttype = 0x7f0900aa;
        public static final int shortcut = 0x7f09004c;
        public static final int showCustom = 0x7f09002a;
        public static final int showHome = 0x7f09002b;
        public static final int showTitle = 0x7f09002c;
        public static final int single_activity_row_root = 0x7f0900c3;
        public static final int slide = 0x7f090025;
        public static final int split_action_bar = 0x7f09003c;
        public static final int strict_sandbox = 0x7f090012;
        public static final int submit_area = 0x7f090057;
        public static final int tabMode = 0x7f090027;
        public static final int terrain = 0x7f09000d;
        public static final int test = 0x7f090013;
        public static final int textViewactivity = 0x7f090075;
        public static final int textViewage = 0x7f090089;
        public static final int textViewage1 = 0x7f09008a;
        public static final int textViewbrought = 0x7f090099;
        public static final int textViewbrought1 = 0x7f09009a;
        public static final int textViewchip = 0x7f09008d;
        public static final int textViewchip1 = 0x7f09008e;
        public static final int textViewforth = 0x7f09005a;
        public static final int textViewid = 0x7f090079;
        public static final int textViewid1 = 0x7f09007a;
        public static final int textViewlist = 0x7f0900c0;
        public static final int textViewlist1 = 0x7f0900bb;
        public static final int textViewlocation = 0x7f090095;
        public static final int textViewlocation1 = 0x7f090096;
        public static final int textViewname = 0x7f090081;
        public static final int textViewname1 = 0x7f090082;
        public static final int textViewowner = 0x7f09009d;
        public static final int textViewowner1 = 0x7f09009e;
        public static final int textViewpic = 0x7f09007d;
        public static final int textViewpic1 = 0x7f09007e;
        public static final int textViewsextype = 0x7f090085;
        public static final int textViewsextype1 = 0x7f090086;
        public static final int textViewwork = 0x7f090091;
        public static final int textViewwork1 = 0x7f090092;
        public static final int texthistory = 0x7f090062;
        public static final int texthistorytype = 0x7f090065;
        public static final int textselect = 0x7f0900a0;
        public static final int textselectdate = 0x7f0900a3;
        public static final int textselectdate1 = 0x7f0900a4;
        public static final int textselectdiscription = 0x7f0900b6;
        public static final int textselectdiscription1 = 0x7f0900b7;
        public static final int textselecttime = 0x7f0900a7;
        public static final int textselecttime1 = 0x7f0900a8;
        public static final int textselecttitle = 0x7f0900b2;
        public static final int textselecttitle1 = 0x7f0900b3;
        public static final int textselecttype = 0x7f0900ab;
        public static final int title = 0x7f090049;
        public static final int top_action_bar = 0x7f09003e;
        public static final int tv_date = 0x7f0900c4;
        public static final int tv_dateValue = 0x7f0900c5;
        public static final int tv_discription = 0x7f0900cc;
        public static final int tv_discriptionValue = 0x7f0900cd;
        public static final int tv_takenBy = 0x7f0900c6;
        public static final int tv_takenByValue = 0x7f0900c7;
        public static final int tv_title = 0x7f0900ca;
        public static final int tv_titleValue = 0x7f0900cb;
        public static final int tv_type = 0x7f0900c8;
        public static final int tv_typeValue = 0x7f0900c9;
        public static final int up = 0x7f09003f;
        public static final int useLogo = 0x7f09002d;
        public static final int withText = 0x7f090032;
        public static final int wrap_content = 0x7f090017;
    }

    public static final class integer {
        /**
         * The maximum number of action buttons that should be permitted within
         * an action bar/action mode. This will be used to determine how many
         * showAsAction="ifRoom" items can fit. "always" items can override this.
         * The maximum number of action buttons that should be permitted within
         * an action bar/action mode. This will be used to determine how many
         * showAsAction="ifRoom" items can fit. "always" items can override this.
         * The maximum number of action buttons that should be permitted within
         * an action bar/action mode. This will be used to determine how many
         * showAsAction="ifRoom" items can fit. "always" items can override this.
         * The maximum number of action buttons that should be permitted within
         * an action bar/action mode. This will be used to determine how many
         * showAsAction="ifRoom" items can fit. "always" items can override this.
         * The maximum number of action buttons that should be permitted within
         * an action bar/action mode. This will be used to determine how many
         * showAsAction="ifRoom" items can fit. "always" items can override this.
         * The maximum number of action buttons that should be permitted within
         * an action bar/action mode. This will be used to determine how many
         * showAsAction="ifRoom" items can fit. "always" items can override this.
         * The maximum number of action buttons that should be permitted within
         * an action bar/action mode. This will be used to determine how many
         * showAsAction="ifRoom" items can fit. "always" items can override this.
         */
        public static final int abc_max_action_buttons = 0x7f0b0001;
        public static final int google_play_services_version = 0x7f0b0000;
    }

    public static final class layout {
        public static final int abc_action_bar_decor = 0x7f030000;
        public static final int abc_action_bar_decor_include = 0x7f030001;
        public static final int abc_action_bar_decor_overlay = 0x7f030002;
        public static final int abc_action_bar_home = 0x7f030003;
        public static final int abc_action_bar_tab = 0x7f030004;
        public static final int abc_action_bar_tabbar = 0x7f030005;
        public static final int abc_action_bar_title_item = 0x7f030006;
        public static final int abc_action_bar_view_list_nav_layout = 0x7f030007;
        public static final int abc_action_menu_item_layout = 0x7f030008;
        public static final int abc_action_menu_layout = 0x7f030009;
        public static final int abc_action_mode_bar = 0x7f03000a;
        public static final int abc_action_mode_close_item = 0x7f03000b;
        public static final int abc_activity_chooser_view = 0x7f03000c;
        public static final int abc_activity_chooser_view_include = 0x7f03000d;
        public static final int abc_activity_chooser_view_list_item = 0x7f03000e;
        public static final int abc_expanded_menu_layout = 0x7f03000f;
        public static final int abc_list_menu_item_checkbox = 0x7f030010;
        public static final int abc_list_menu_item_icon = 0x7f030011;
        public static final int abc_list_menu_item_layout = 0x7f030012;
        public static final int abc_list_menu_item_radio = 0x7f030013;
        public static final int abc_popup_menu_item_layout = 0x7f030014;
        public static final int abc_search_dropdown_item_icons_2line = 0x7f030015;
        public static final int abc_search_view = 0x7f030016;
        public static final int abc_simple_decor = 0x7f030017;
        public static final int activity_four = 0x7f030018;
        public static final int activity_history = 0x7f030019;
        public static final int activity_login = 0x7f03001a;
        public static final int activity_profile = 0x7f03001b;
        public static final int activity_select = 0x7f03001c;
        public static final int activity_three = 0x7f03001d;
        public static final int activity_two = 0x7f03001e;
        public static final int single_activity_row = 0x7f03001f;
        public static final int support_simple_spinner_dropdown_item = 0x7f030020;
    }

    public static final class menu {
        public static final int main = 0x7f0e0000;
    }

    public static final class raw {
        public static final int gtm_analytics = 0x7f060000;
    }

    public static final class string {
        /**
         * Content description for the action bar "home" affordance. [CHAR LIMIT=NONE]
         */
        public static final int abc_action_bar_home_description = 0x7f08002d;
        /**
         * Content description for the action bar "up" affordance. [CHAR LIMIT=NONE]
         */
        public static final int abc_action_bar_up_description = 0x7f08002e;
        /**
         * Content description for the action menu overflow button. [CHAR LIMIT=NONE]
         */
        public static final int abc_action_menu_overflow_description = 0x7f08002f;
        /**
         * Label for the "Done" button on the far left of action mode toolbars.
         */
        public static final int abc_action_mode_done = 0x7f08002c;
        /**
         * Title for a button to expand the list of activities in ActivityChooserView [CHAR LIMIT=25]
         */
        public static final int abc_activity_chooser_view_see_all = 0x7f080036;
        /**
         * ActivityChooserView - accessibility support
         * Description of the shwoing of a popup window with activities to choose from. [CHAR LIMIT=NONE]
         */
        public static final int abc_activitychooserview_choose_application = 0x7f080035;
        /**
         * SearchView accessibility description for clear button [CHAR LIMIT=NONE]
         */
        public static final int abc_searchview_description_clear = 0x7f080032;
        /**
         * SearchView accessibility description for search text field [CHAR LIMIT=NONE]
         */
        public static final int abc_searchview_description_query = 0x7f080031;
        /**
         * SearchView accessibility description for search button [CHAR LIMIT=NONE]
         */
        public static final int abc_searchview_description_search = 0x7f080030;
        /**
         * SearchView accessibility description for submit button [CHAR LIMIT=NONE]
         */
        public static final int abc_searchview_description_submit = 0x7f080033;
        /**
         * SearchView accessibility description for voice button [CHAR LIMIT=NONE]
         */
        public static final int abc_searchview_description_voice = 0x7f080034;
        /**
         * Description of the choose target button in a ShareActionProvider (share UI). [CHAR LIMIT=NONE]
         */
        public static final int abc_shareactionprovider_share_with = 0x7f080038;
        /**
         * Description of a share target (both in the list of such or the default share button) in a ShareActionProvider (share UI). [CHAR LIMIT=NONE]
         */
        public static final int abc_shareactionprovider_share_with_application = 0x7f080037;
        public static final int accept = 0x7f080002;
        public static final int action_settings = 0x7f08003b;
        public static final int activities = 0x7f08004d;
        public static final int activity = 0x7f080065;
        public static final int add = 0x7f080045;
        public static final int age = 0x7f08005c;
        public static final int all = 0x7f08004e;
        public static final int app_name = 0x7f080039;
        /**
         * Brand name for Facebook [DO NOT TRANSLATE]
         */
        public static final int auth_google_play_services_client_facebook_display_name = 0x7f080007;
        /**
         * Brand name for Google [DO NOT TRANSLATE]
         */
        public static final int auth_google_play_services_client_google_display_name = 0x7f080006;
        public static final int birthyear = 0x7f08005e;
        public static final int brought = 0x7f080062;
        /**
         * Message of the notification to indicate an active cast display connection.  [CHAR LIMIT=80] NOTE: Same text as msgid="794424023757290105"
         */
        public static final int cast_notification_connected_message = 0x7f080009;
        /**
         * Message of the notification to indicate the process of connecting to a cast display.  [CHAR LIMIT=80] NOTE: Same text as msgid="5435169294190995247"
         */
        public static final int cast_notification_connecting_message = 0x7f080008;
        /**
         * Label of a button to disconnect an active cast display connection.  [CHAR LIMIT=25] NOTE: Same text as msgid="9024230238785261495"
         */
        public static final int cast_notification_disconnect = 0x7f08000a;
        public static final int chipno = 0x7f08005f;
        /**
         * Text for notification shown when the Android Wear apps needs to be updated. Only shown on the wearable. [CHAR LIMIT=NONE]
         */
        public static final int common_android_wear_notification_needs_update_text = 0x7f08000d;
        /**
         * Message in confirmation dialog informing user that they need to update
         * the Android Wear app [CHAR LIMIT=NONE]
         */
        public static final int common_android_wear_update_text = 0x7f08001a;
        /**
         * Title of confirmation dialog informing user that they need to update
         * the Android Wear app (from Play Store) [CHAR LIMIT=40]
         */
        public static final int common_android_wear_update_title = 0x7f080018;
        /**
         * Message in confirmation dialog informing the user that one of the APIs they attepmt to access is not available. [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_api_unavailable_text = 0x7f080028;
        /**
         * Button in confirmation dialog to enable Google Play services.  Clicking it
         * will direct user to application settings of Google Play services where they
         * can enable it [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_enable_button = 0x7f080016;
        /**
         * Message in confirmation dialog informing user they need to enable
         * Google Play services in application settings [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_enable_text = 0x7f080015;
        /**
         * Title of confirmation dialog informing user they need to enable
         * Google Play services in application settings [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_enable_title = 0x7f080014;
        /**
         * Requested by string saying which app requested the notification. [CHAR LIMIT=42]
         */
        public static final int common_google_play_services_error_notification_requested_by_msg = 0x7f08000f;
        /**
         * Button in confirmation dialog for installing Google Play services [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_install_button = 0x7f080013;
        /**
         * (For phones) Message in confirmation dialog informing user that
         * they need to install Google Play services (from Play Store) [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_install_text_phone = 0x7f080011;
        /**
         * (For tablets) Message in confirmation dialog informing user that
         * they need to install Google Play services (from Play Store) [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_install_text_tablet = 0x7f080012;
        /**
         * Title of confirmation dialog informing user that they need to install
         * Google Play services (from Play Store) [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_install_title = 0x7f080010;
        /**
         * Message in confirmation dialog informing the user that they provided an invalid account. [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_invalid_account_text = 0x7f080020;
        /**
         * Title of confirmation dialog informing the user that they provided an invalid account. [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_invalid_account_title = 0x7f08001f;
        /**
         * Title for notification shown when GooglePlayServices needs to be enabled for an
         * application to work. [CHAR LIMIT=70]
         */
        public static final int common_google_play_services_needs_enabling_title = 0x7f08000e;
        /**
         * Message in confirmation dialog informing the user that a network error occurred. [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_network_error_text = 0x7f08001e;
        /**
         * Title of confirmation dialog informing the user that a network error occurred. [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_network_error_title = 0x7f08001d;
        /**
         * Title for notification shown when GooglePlayServices needs to be updated for an
         * application to work. [CHAR LIMIT=70]
         */
        public static final int common_google_play_services_notification_needs_update_title = 0x7f08000c;
        /**
         * Title for notification shown when GooglePlayServices is unavailable [CHAR LIMIT=42]
         */
        public static final int common_google_play_services_notification_ticker = 0x7f08000b;
        /**
         * Message in confirmation dialog informing the user that the account could not be signed in. [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_sign_in_failed_text = 0x7f08002a;
        /**
         * Title of confirmation dialog informing the user that the account could not be signed in. [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_sign_in_failed_title = 0x7f080029;
        /**
         * Message in confirmation dialog informing user there is an unknown issue in Google Play
         * services [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_unknown_issue = 0x7f080021;
        /**
         * Message in confirmation dialog informing user that Google Play services is not supported on their device [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_unsupported_text = 0x7f080023;
        /**
         * Title of confirmation dialog informing user that Google Play services is not supported on their device [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_unsupported_title = 0x7f080022;
        /**
         * Button in confirmation dialog for updating Google Play services [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_update_button = 0x7f080024;
        /**
         * Message in confirmation dialog informing user that they need to update
         * Google Play services (from Play Store) [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_update_text = 0x7f080019;
        /**
         * Title of confirmation dialog informing user that they need to update
         * Google Play services (from Play Store) [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_update_title = 0x7f080017;
        /**
         * Message in confirmation dialog informing user that Google Play services is currently
         * updating [CHAR LIMIT=NONE]
         */
        public static final int common_google_play_services_updating_text = 0x7f08001c;
        /**
         * Title of confirmation dialog informing user that Google Play services is currently
         * updating [CHAR LIMIT=40]
         */
        public static final int common_google_play_services_updating_title = 0x7f08001b;
        /**
         * Label for an action to open a notifications content on the phone [CHAR LIMIT=25]
         */
        public static final int common_open_on_phone = 0x7f080027;
        /**
         * Sign-in button text [CHAR LIMIT=15]
         */
        public static final int common_signin_button_text = 0x7f080025;
        /**
         * Long form sign-in button text [CHAR LIMIT=30]
         */
        public static final int common_signin_button_text_long = 0x7f080026;
        public static final int create_calendar_message = 0x7f080005;
        public static final int create_calendar_title = 0x7f080004;
        public static final int date = 0x7f08004f;
        public static final int daterow = 0x7f080066;
        public static final int decline = 0x7f080003;
        public static final int diedate = 0x7f080064;
        public static final int discription = 0x7f080053;
        public static final int disprow = 0x7f08006a;
        public static final int fillupby = 0x7f080058;
        public static final int forgot_password = 0x7f08003f;
        public static final int hello_world = 0x7f08003a;
        public static final int history = 0x7f08004a;
        public static final int id = 0x7f080059;
        public static final int list_of_elephants_in_project = 0x7f080044;
        public static final int list_of_projects = 0x7f080043;
        public static final int location = 0x7f080061;
        public static final int name = 0x7f08005b;
        public static final int note = 0x7f080056;
        public static final int owner = 0x7f080063;
        public static final int password = 0x7f08003e;
        public static final int photos = 0x7f080048;
        public static final int profile = 0x7f080049;
        public static final int profilepic = 0x7f08005a;
        public static final int projectname = 0x7f080041;
        public static final int refresh = 0x7f08003c;
        public static final int report = 0x7f080047;
        public static final int search = 0x7f08006b;
        public static final int sex = 0x7f08005d;
        public static final int sign_in = 0x7f080040;
        public static final int startdate = 0x7f080042;
        public static final int store_picture_message = 0x7f080001;
        public static final int store_picture_title = 0x7f080000;
        public static final int submit = 0x7f080057;
        public static final int takenbyrow = 0x7f080067;
        public static final int time = 0x7f080050;
        public static final int title = 0x7f080052;
        public static final int titlerow = 0x7f080069;
        public static final int treat = 0x7f080054;
        public static final int treatment = 0x7f08004b;
        public static final int type = 0x7f080051;
        public static final int typerow = 0x7f080068;
        public static final int update = 0x7f080046;
        public static final int username = 0x7f08003d;
        public static final int vaccin = 0x7f080055;
        public static final int vaccination = 0x7f08004c;
        /**
         * Text on a placeholder buy button when Google Play services is not
         * available or up-to-date
         * Text on a button that allows a user to make a payment with Google Wallet
         * [CHAR LIMIT=30]
         */
        public static final int wallet_buy_button_place_holder = 0x7f08002b;
        public static final int workplace = 0x7f080060;
    }

    public static final class style {
        /**
         * Base application theme, dependent on API level. This theme is replaced
         * by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
         * <p/>
         * <p/>
         * Theme customizations available in newer API levels can go in
         * res/values-vXX/styles.xml, while customizations related to
         * backward-compatibility can go here.
         * <p/>
         * <p/>
         * Base application theme for API 11+. This theme completely replaces
         * AppBaseTheme from res/values/styles.xml on API 11+ devices.
         * <p/>
         * API 11 theme customizations can go here.
         * <p/>
         * Base application theme for API 14+. This theme completely replaces
         * AppBaseTheme from BOTH res/values/styles.xml and
         * res/values-v11/styles.xml on API 14+ devices.
         * <p/>
         * API 14 theme customizations can go here.
         */
        public static final int AppBaseTheme = 0x7f070090;
        /**
         * Application theme.
         * All customizations that are NOT specific to a particular API-level can go here.
         */
        public static final int AppTheme = 0x7f070091;
        /**
         * Mimic text appearance in select_dialog_item.xml
         */
        public static final int TextAppearance_AppCompat_Base_CompactMenu_Dialog = 0x7f070068;
        public static final int TextAppearance_AppCompat_Base_SearchResult = 0x7f070072;
        public static final int TextAppearance_AppCompat_Base_SearchResult_Subtitle = 0x7f070074;
        /**
         * Search View result styles
         */
        public static final int TextAppearance_AppCompat_Base_SearchResult_Title = 0x7f070073;
        public static final int TextAppearance_AppCompat_Base_Widget_PopupMenu_Large = 0x7f07006e;
        public static final int TextAppearance_AppCompat_Base_Widget_PopupMenu_Small = 0x7f07006f;
        public static final int TextAppearance_AppCompat_Light_Base_SearchResult = 0x7f070075;
        public static final int TextAppearance_AppCompat_Light_Base_SearchResult_Subtitle = 0x7f070077;
        /**
         * TextAppearance.Holo.Light.SearchResult.* are private so we extend from the default
         * versions instead (which are exactly the same).
         */
        public static final int TextAppearance_AppCompat_Light_Base_SearchResult_Title = 0x7f070076;
        public static final int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Large = 0x7f070070;
        public static final int TextAppearance_AppCompat_Light_Base_Widget_PopupMenu_Small = 0x7f070071;
        public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle = 0x7f07003a;
        public static final int TextAppearance_AppCompat_Light_SearchResult_Title = 0x7f070039;
        public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large = 0x7f070035;
        public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small = 0x7f070036;
        public static final int TextAppearance_AppCompat_SearchResult_Subtitle = 0x7f070038;
        public static final int TextAppearance_AppCompat_SearchResult_Title = 0x7f070037;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu = 0x7f07001f;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle = 0x7f07000b;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse = 0x7f07000d;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Title = 0x7f07000a;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse = 0x7f07000c;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle = 0x7f070023;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse = 0x7f070025;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Title = 0x7f070022;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse = 0x7f070024;
        public static final int TextAppearance_AppCompat_Widget_Base_ActionBar_Menu = 0x7f070059;
        public static final int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle = 0x7f07005b;
        public static final int TextAppearance_AppCompat_Widget_Base_ActionBar_Subtitle_Inverse = 0x7f07005d;
        public static final int TextAppearance_AppCompat_Widget_Base_ActionBar_Title = 0x7f07005a;
        public static final int TextAppearance_AppCompat_Widget_Base_ActionBar_Title_Inverse = 0x7f07005c;
        public static final int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle = 0x7f070056;
        public static final int TextAppearance_AppCompat_Widget_Base_ActionMode_Subtitle_Inverse = 0x7f070058;
        public static final int TextAppearance_AppCompat_Widget_Base_ActionMode_Title = 0x7f070055;
        public static final int TextAppearance_AppCompat_Widget_Base_ActionMode_Title_Inverse = 0x7f070057;
        public static final int TextAppearance_AppCompat_Widget_Base_DropDownItem = 0x7f070066;
        public static final int TextAppearance_AppCompat_Widget_DropDownItem = 0x7f070026;
        public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large = 0x7f070033;
        public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small = 0x7f070034;
        public static final int TextAppearance_Widget_AppCompat_Base_ExpandedMenu_Item = 0x7f070067;
        public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item = 0x7f07002d;
        /**
         * Themes in the "Theme.AppCompat" family will contain an action bar by default.
         * If Holo themes are available on the current platform version they will be used.
         * A limited Holo-styled action bar will be provided on platform versions older
         * than 3.0. (API 11)
         * <p/>
         * These theme declarations contain any version-independent specification. Items
         * that need to vary based on platform version should be defined in the corresponding
         * "Theme.Base" theme.
         * Platform-independent theme providing an action bar in a dark-themed activity.
         */
        public static final int Theme_AppCompat = 0x7f07007c;
        /**
         * Menu/item attributes
         */
        public static final int Theme_AppCompat_Base_CompactMenu = 0x7f070088;
        public static final int Theme_AppCompat_Base_CompactMenu_Dialog = 0x7f070089;
        /**
         * Menu/item attributes
         */
        public static final int Theme_AppCompat_CompactMenu = 0x7f070081;
        public static final int Theme_AppCompat_CompactMenu_Dialog = 0x7f070082;
        public static final int Theme_AppCompat_DialogWhenLarge = 0x7f07007f;
        /**
         * Platform-independent theme providing an action bar in a light-themed activity.
         */
        public static final int Theme_AppCompat_Light = 0x7f07007d;
        /**
         * Platform-independent theme providing an action bar in a dark-themed activity.
         */
        public static final int Theme_AppCompat_Light_DarkActionBar = 0x7f07007e;
        public static final int Theme_AppCompat_Light_DialogWhenLarge = 0x7f070080;
        /**
         * Base platform-dependent theme
         */
        public static final int Theme_Base = 0x7f070083;
        /**
         * Base platform-dependent theme providing an action bar in a dark-themed activity.
         * Base platform-dependent theme providing an action bar in a dark-themed activity.
         */
        public static final int Theme_Base_AppCompat = 0x7f070085;
        public static final int Theme_Base_AppCompat_Dialog_FixedSize = 0x7f07008c;
        public static final int Theme_Base_AppCompat_Dialog_Light_FixedSize = 0x7f07008d;
        public static final int Theme_Base_AppCompat_DialogWhenLarge = 0x7f07008a;
        /**
         * As we have defined the theme in values-large (for compat) and values-large takes precedence
         * over values-v14, we need to reset back to the Holo parent in values-large-v14. As the themes
         * in values-v14 & values-large-v14 are exactly the same, these "double base" themes can be
         * inherited from in both values-v14 and values-large-v14.
         */
        public static final int Theme_Base_AppCompat_DialogWhenLarge_Base = 0x7f07008e;
        /**
         * Base platform-dependent theme providing an action bar in a light-themed activity.
         * Base platform-dependent theme providing an action bar in a light-themed activity.
         */
        public static final int Theme_Base_AppCompat_Light = 0x7f070086;
        /**
         * Base platform-dependent theme providing a dark action bar in a light-themed activity.
         * Base platform-dependent theme providing a dark action bar in a light-themed activity.
         */
        public static final int Theme_Base_AppCompat_Light_DarkActionBar = 0x7f070087;
        public static final int Theme_Base_AppCompat_Light_DialogWhenLarge = 0x7f07008b;
        public static final int Theme_Base_AppCompat_Light_DialogWhenLarge_Base = 0x7f07008f;
        /**
         * Base platform-dependent theme providing a light-themed activity.
         */
        public static final int Theme_Base_Light = 0x7f070084;
        public static final int Theme_IAPTheme = 0x7f070000;
        public static final int WalletFragmentDefaultButtonTextAppearance = 0x7f070003;
        public static final int WalletFragmentDefaultDetailsHeaderTextAppearance = 0x7f070002;
        public static final int WalletFragmentDefaultDetailsTextAppearance = 0x7f070001;
        /**
         * Default style of the wallet fragment that will be used if not set explicitly
         * when fragment is created
         */
        public static final int WalletFragmentDefaultStyle = 0x7f070004;
        /**
         * Styles in here can be extended for customisation in your application. Each utilises
         * one of the Base styles. If Holo themes are available on the current platform version
         * they will be used instead of the compat styles.
         */
        public static final int Widget_AppCompat_ActionBar = 0x7f070005;
        public static final int Widget_AppCompat_ActionBar_Solid = 0x7f070007;
        public static final int Widget_AppCompat_ActionBar_TabBar = 0x7f070016;
        public static final int Widget_AppCompat_ActionBar_TabText = 0x7f07001c;
        public static final int Widget_AppCompat_ActionBar_TabView = 0x7f070019;
        public static final int Widget_AppCompat_ActionButton = 0x7f070010;
        public static final int Widget_AppCompat_ActionButton_CloseMode = 0x7f070012;
        public static final int Widget_AppCompat_ActionButton_Overflow = 0x7f070014;
        public static final int Widget_AppCompat_ActionMode = 0x7f070020;
        public static final int Widget_AppCompat_ActivityChooserView = 0x7f07003d;
        public static final int Widget_AppCompat_AutoCompleteTextView = 0x7f07003b;
        public static final int Widget_AppCompat_Base_ActionBar = 0x7f07003f;
        public static final int Widget_AppCompat_Base_ActionBar_Solid = 0x7f070041;
        public static final int Widget_AppCompat_Base_ActionBar_TabBar = 0x7f07004a;
        public static final int Widget_AppCompat_Base_ActionBar_TabText = 0x7f070050;
        public static final int Widget_AppCompat_Base_ActionBar_TabView = 0x7f07004d;
        /**
         * Action Button Styles
         */
        public static final int Widget_AppCompat_Base_ActionButton = 0x7f070044;
        public static final int Widget_AppCompat_Base_ActionButton_CloseMode = 0x7f070046;
        public static final int Widget_AppCompat_Base_ActionButton_Overflow = 0x7f070048;
        public static final int Widget_AppCompat_Base_ActionMode = 0x7f070053;
        public static final int Widget_AppCompat_Base_ActivityChooserView = 0x7f07007a;
        /**
         * AutoCompleteTextView styles (for SearchView)
         */
        public static final int Widget_AppCompat_Base_AutoCompleteTextView = 0x7f070078;
        public static final int Widget_AppCompat_Base_DropDownItem_Spinner = 0x7f070062;
        /**
         * Popup Menu
         */
        public static final int Widget_AppCompat_Base_ListPopupWindow = 0x7f07006a;
        /**
         * Spinner Widgets
         */
        public static final int Widget_AppCompat_Base_ListView_DropDown = 0x7f070064;
        public static final int Widget_AppCompat_Base_ListView_Menu = 0x7f070069;
        public static final int Widget_AppCompat_Base_PopupMenu = 0x7f07006c;
        public static final int Widget_AppCompat_Base_ProgressBar = 0x7f07005f;
        /**
         * Progress Bar
         */
        public static final int Widget_AppCompat_Base_ProgressBar_Horizontal = 0x7f07005e;
        /**
         * Action Bar Spinner Widgets
         */
        public static final int Widget_AppCompat_Base_Spinner = 0x7f070060;
        public static final int Widget_AppCompat_DropDownItem_Spinner = 0x7f070029;
        public static final int Widget_AppCompat_Light_ActionBar = 0x7f070006;
        public static final int Widget_AppCompat_Light_ActionBar_Solid = 0x7f070008;
        public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse = 0x7f070009;
        public static final int Widget_AppCompat_Light_ActionBar_TabBar = 0x7f070017;
        public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse = 0x7f070018;
        public static final int Widget_AppCompat_Light_ActionBar_TabText = 0x7f07001d;
        public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse = 0x7f07001e;
        public static final int Widget_AppCompat_Light_ActionBar_TabView = 0x7f07001a;
        public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse = 0x7f07001b;
        public static final int Widget_AppCompat_Light_ActionButton = 0x7f070011;
        public static final int Widget_AppCompat_Light_ActionButton_CloseMode = 0x7f070013;
        public static final int Widget_AppCompat_Light_ActionButton_Overflow = 0x7f070015;
        public static final int Widget_AppCompat_Light_ActionMode_Inverse = 0x7f070021;
        public static final int Widget_AppCompat_Light_ActivityChooserView = 0x7f07003e;
        public static final int Widget_AppCompat_Light_AutoCompleteTextView = 0x7f07003c;
        public static final int Widget_AppCompat_Light_Base_ActionBar = 0x7f070040;
        public static final int Widget_AppCompat_Light_Base_ActionBar_Solid = 0x7f070042;
        public static final int Widget_AppCompat_Light_Base_ActionBar_Solid_Inverse = 0x7f070043;
        public static final int Widget_AppCompat_Light_Base_ActionBar_TabBar = 0x7f07004b;
        public static final int Widget_AppCompat_Light_Base_ActionBar_TabBar_Inverse = 0x7f07004c;
        public static final int Widget_AppCompat_Light_Base_ActionBar_TabText = 0x7f070051;
        public static final int Widget_AppCompat_Light_Base_ActionBar_TabText_Inverse = 0x7f070052;
        public static final int Widget_AppCompat_Light_Base_ActionBar_TabView = 0x7f07004e;
        public static final int Widget_AppCompat_Light_Base_ActionBar_TabView_Inverse = 0x7f07004f;
        public static final int Widget_AppCompat_Light_Base_ActionButton = 0x7f070045;
        public static final int Widget_AppCompat_Light_Base_ActionButton_CloseMode = 0x7f070047;
        public static final int Widget_AppCompat_Light_Base_ActionButton_Overflow = 0x7f070049;
        public static final int Widget_AppCompat_Light_Base_ActionMode_Inverse = 0x7f070054;
        public static final int Widget_AppCompat_Light_Base_ActivityChooserView = 0x7f07007b;
        public static final int Widget_AppCompat_Light_Base_AutoCompleteTextView = 0x7f070079;
        public static final int Widget_AppCompat_Light_Base_DropDownItem_Spinner = 0x7f070063;
        public static final int Widget_AppCompat_Light_Base_ListPopupWindow = 0x7f07006b;
        public static final int Widget_AppCompat_Light_Base_ListView_DropDown = 0x7f070065;
        public static final int Widget_AppCompat_Light_Base_PopupMenu = 0x7f07006d;
        public static final int Widget_AppCompat_Light_Base_Spinner = 0x7f070061;
        public static final int Widget_AppCompat_Light_DropDownItem_Spinner = 0x7f07002a;
        public static final int Widget_AppCompat_Light_ListPopupWindow = 0x7f07002f;
        public static final int Widget_AppCompat_Light_ListView_DropDown = 0x7f07002c;
        public static final int Widget_AppCompat_Light_PopupMenu = 0x7f070031;
        public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar = 0x7f070028;
        public static final int Widget_AppCompat_ListPopupWindow = 0x7f07002e;
        public static final int Widget_AppCompat_ListView_DropDown = 0x7f07002b;
        public static final int Widget_AppCompat_ListView_Menu = 0x7f070032;
        public static final int Widget_AppCompat_PopupMenu = 0x7f070030;
        public static final int Widget_AppCompat_ProgressBar = 0x7f07000f;
        public static final int Widget_AppCompat_ProgressBar_Horizontal = 0x7f07000e;
        public static final int Widget_AppCompat_Spinner_DropDown_ActionBar = 0x7f070027;
    }

    public static final class xml {
        public static final int app_tracker = 0x7f050000;
    }

    public static final class styleable {
        /**
         * ============================================
         * Attributes used to style the Action Bar.
         * These should be set on your theme; the default actionBarStyle will
         * propagate them to the correct elements as needed.
         * <p/>
         * Please Note: when overriding attributes for an ActionBar style
         * you must specify each attribute twice: once with the "android:"
         * namespace prefix and once without.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #ActionBar_background com.elefante:background}</code></td><td> Specifies a background drawable for the action bar.</td></tr>
         * <tr><td><code>{@link #ActionBar_backgroundSplit com.elefante:backgroundSplit}</code></td><td> Specifies a background drawable for the bottom component of a split action bar.</td></tr>
         * <tr><td><code>{@link #ActionBar_backgroundStacked com.elefante:backgroundStacked}</code></td><td> Specifies a background drawable for a second stacked row of the action bar.</td></tr>
         * <tr><td><code>{@link #ActionBar_customNavigationLayout com.elefante:customNavigationLayout}</code></td><td> Specifies a layout for custom navigation.</td></tr>
         * <tr><td><code>{@link #ActionBar_displayOptions com.elefante:displayOptions}</code></td><td> Options affecting how the action bar is displayed.</td></tr>
         * <tr><td><code>{@link #ActionBar_divider com.elefante:divider}</code></td><td> Specifies the drawable used for item dividers.</td></tr>
         * <tr><td><code>{@link #ActionBar_height com.elefante:height}</code></td><td> Specifies a fixed height.</td></tr>
         * <tr><td><code>{@link #ActionBar_homeLayout com.elefante:homeLayout}</code></td><td> Specifies a layout to use for the "home" section of the action bar.</td></tr>
         * <tr><td><code>{@link #ActionBar_icon com.elefante:icon}</code></td><td> Specifies the drawable used for the application icon.</td></tr>
         * <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.elefante:indeterminateProgressStyle}</code></td><td> Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
         * <tr><td><code>{@link #ActionBar_itemPadding com.elefante:itemPadding}</code></td><td> Specifies padding that should be applied to the left and right sides of
         * system-provided items in the bar.</td></tr>
         * <tr><td><code>{@link #ActionBar_logo com.elefante:logo}</code></td><td> Specifies the drawable used for the application logo.</td></tr>
         * <tr><td><code>{@link #ActionBar_navigationMode com.elefante:navigationMode}</code></td><td> The type of navigation to use.</td></tr>
         * <tr><td><code>{@link #ActionBar_progressBarPadding com.elefante:progressBarPadding}</code></td><td> Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
         * <tr><td><code>{@link #ActionBar_progressBarStyle com.elefante:progressBarStyle}</code></td><td> Specifies a style resource to use for an embedded progress bar.</td></tr>
         * <tr><td><code>{@link #ActionBar_subtitle com.elefante:subtitle}</code></td><td> Specifies subtitle text used for navigationMode="normal" </td></tr>
         * <tr><td><code>{@link #ActionBar_subtitleTextStyle com.elefante:subtitleTextStyle}</code></td><td> Specifies a style to use for subtitle text.</td></tr>
         * <tr><td><code>{@link #ActionBar_title com.elefante:title}</code></td><td> Specifies title text used for navigationMode="normal" </td></tr>
         * <tr><td><code>{@link #ActionBar_titleTextStyle com.elefante:titleTextStyle}</code></td><td> Specifies a style to use for title text.</td></tr>
         * </table>
         *
         * @see #ActionBar_background
         * @see #ActionBar_backgroundSplit
         * @see #ActionBar_backgroundStacked
         * @see #ActionBar_customNavigationLayout
         * @see #ActionBar_displayOptions
         * @see #ActionBar_divider
         * @see #ActionBar_height
         * @see #ActionBar_homeLayout
         * @see #ActionBar_icon
         * @see #ActionBar_indeterminateProgressStyle
         * @see #ActionBar_itemPadding
         * @see #ActionBar_logo
         * @see #ActionBar_navigationMode
         * @see #ActionBar_progressBarPadding
         * @see #ActionBar_progressBarStyle
         * @see #ActionBar_subtitle
         * @see #ActionBar_subtitleTextStyle
         * @see #ActionBar_title
         * @see #ActionBar_titleTextStyle
         */
        public static final int[] ActionBar = {
                0x7f01004b, 0x7f01004c, 0x7f01004d, 0x7f01004e,
                0x7f01004f, 0x7f010050, 0x7f010051, 0x7f010052,
                0x7f010053, 0x7f010054, 0x7f010055, 0x7f010056,
                0x7f010057, 0x7f010058, 0x7f010059, 0x7f01005a,
                0x7f01005b, 0x7f01005c, 0x7f01005d
        };
        /**
         * @attr description
         * Specifies a background drawable for the action bar.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:background
         */
        public static final int ActionBar_background = 10;
        /**
         * @attr description
         * Specifies a background drawable for the bottom component of a split action bar.
         * <p/>
         * <p/>
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:backgroundSplit
         */
        public static final int ActionBar_backgroundSplit = 12;
        /**
         * @attr description
         * Specifies a background drawable for a second stacked row of the action bar.
         * <p/>
         * <p/>
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:backgroundStacked
         */
        public static final int ActionBar_backgroundStacked = 11;
        /**
         * @attr description
         * Specifies a layout for custom navigation. Overrides navigationMode.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:customNavigationLayout
         */
        public static final int ActionBar_customNavigationLayout = 13;
        /**
         * <p/>
         *
         * @attr description
         * Options affecting how the action bar is displayed.
         * <p/>
         * <p/>
         * <p>Must be one or more (separated by '|') of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>useLogo</code></td><td>0x1</td><td></td></tr>
         * <tr><td><code>showHome</code></td><td>0x2</td><td></td></tr>
         * <tr><td><code>homeAsUp</code></td><td>0x4</td><td></td></tr>
         * <tr><td><code>showTitle</code></td><td>0x8</td><td></td></tr>
         * <tr><td><code>showCustom</code></td><td>0x10</td><td></td></tr>
         * <tr><td><code>disableHome</code></td><td>0x20</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:displayOptions
         */
        public static final int ActionBar_displayOptions = 3;
        /**
         * @attr description
         * Specifies the drawable used for item dividers.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:divider
         */
        public static final int ActionBar_divider = 9;
        /**
         * @attr description
         * Specifies a fixed height.
         * <p/>
         * <p/>
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:height
         */
        public static final int ActionBar_height = 1;
        /**
         * @attr description
         * Specifies a layout to use for the "home" section of the action bar.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:homeLayout
         */
        public static final int ActionBar_homeLayout = 14;
        /**
         * @attr description
         * Specifies the drawable used for the application icon.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:icon
         */
        public static final int ActionBar_icon = 7;
        /**
         * @attr description
         * Specifies a style resource to use for an indeterminate progress spinner.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:indeterminateProgressStyle
         */
        public static final int ActionBar_indeterminateProgressStyle = 16;
        /**
         * @attr description
         * Specifies padding that should be applied to the left and right sides of
         * system-provided items in the bar.
         * <p/>
         * <p/>
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:itemPadding
         */
        public static final int ActionBar_itemPadding = 18;
        /**
         * @attr description
         * Specifies the drawable used for the application logo.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:logo
         */
        public static final int ActionBar_logo = 8;
        /**
         * <p/>
         *
         * @attr description
         * The type of navigation to use.
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>normal</code></td><td>0</td><td> Normal static title text </td></tr>
         * <tr><td><code>listMode</code></td><td>1</td><td> The action bar will use a selection list for navigation. </td></tr>
         * <tr><td><code>tabMode</code></td><td>2</td><td> The action bar will use a series of horizontal tabs for navigation. </td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:navigationMode
         */
        public static final int ActionBar_navigationMode = 2;
        /**
         * @attr description
         * Specifies the horizontal padding on either end for an embedded progress bar.
         * <p/>
         * <p/>
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:progressBarPadding
         */
        public static final int ActionBar_progressBarPadding = 17;
        /**
         * @attr description
         * Specifies a style resource to use for an embedded progress bar.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:progressBarStyle
         */
        public static final int ActionBar_progressBarStyle = 15;
        /**
         * @attr description
         * Specifies subtitle text used for navigationMode="normal"
         * <p/>
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:subtitle
         */
        public static final int ActionBar_subtitle = 4;
        /**
         * @attr description
         * Specifies a style to use for subtitle text.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:subtitleTextStyle
         */
        public static final int ActionBar_subtitleTextStyle = 6;
        /**
         * @attr description
         * Specifies title text used for navigationMode="normal"
         * <p/>
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:title
         */
        public static final int ActionBar_title = 0;
        /**
         * @attr description
         * Specifies a style to use for title text.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:titleTextStyle
         */
        public static final int ActionBar_titleTextStyle = 5;
        /**
         * Valid LayoutParams for views placed in the action bar as custom views.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
         * </table>
         *
         * @see #ActionBarLayout_android_layout_gravity
         */
        public static final int[] ActionBarLayout = {
                0x010100b3
        };
        /**
         * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
         * attribute's value can be found in the {@link #ActionBarLayout} array.
         *
         * @attr name android:layout_gravity
         */
        public static final int ActionBarLayout_android_layout_gravity = 0;
        /**
         * These attributes are meant to be specified and customized by the app.
         * The system will read and apply them as needed. These attributes control
         * properties of the activity window, such as whether an action bar should
         * be present and whether it should overlay content.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #ActionBarWindow_windowActionBar com.elefante:windowActionBar}</code></td><td></td></tr>
         * <tr><td><code>{@link #ActionBarWindow_windowActionBarOverlay com.elefante:windowActionBarOverlay}</code></td><td></td></tr>
         * <tr><td><code>{@link #ActionBarWindow_windowFixedHeightMajor com.elefante:windowFixedHeightMajor}</code></td><td> A fixed height for the window along the major axis of the screen,
         * that is, when in portrait.</td></tr>
         * <tr><td><code>{@link #ActionBarWindow_windowFixedHeightMinor com.elefante:windowFixedHeightMinor}</code></td><td> A fixed height for the window along the minor axis of the screen,
         * that is, when in landscape.</td></tr>
         * <tr><td><code>{@link #ActionBarWindow_windowFixedWidthMajor com.elefante:windowFixedWidthMajor}</code></td><td> A fixed width for the window along the major axis of the screen,
         * that is, when in landscape.</td></tr>
         * <tr><td><code>{@link #ActionBarWindow_windowFixedWidthMinor com.elefante:windowFixedWidthMinor}</code></td><td> A fixed width for the window along the minor axis of the screen,
         * that is, when in portrait.</td></tr>
         * <tr><td><code>{@link #ActionBarWindow_windowSplitActionBar com.elefante:windowSplitActionBar}</code></td><td></td></tr>
         * </table>
         *
         * @see #ActionBarWindow_windowActionBar
         * @see #ActionBarWindow_windowActionBarOverlay
         * @see #ActionBarWindow_windowFixedHeightMajor
         * @see #ActionBarWindow_windowFixedHeightMinor
         * @see #ActionBarWindow_windowFixedWidthMajor
         * @see #ActionBarWindow_windowFixedWidthMinor
         * @see #ActionBarWindow_windowSplitActionBar
         */
        public static final int[] ActionBarWindow = {
                0x7f010026, 0x7f010027, 0x7f010028, 0x7f010029,
                0x7f01002a, 0x7f01002b, 0x7f01002c
        };
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#windowActionBar}
         * attribute's value can be found in the {@link #ActionBarWindow} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:windowActionBar
         */
        public static final int ActionBarWindow_windowActionBar = 0;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#windowActionBarOverlay}
         * attribute's value can be found in the {@link #ActionBarWindow} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:windowActionBarOverlay
         */
        public static final int ActionBarWindow_windowActionBarOverlay = 1;
        /**
         * @attr description
         * A fixed height for the window along the major axis of the screen,
         * that is, when in portrait. Can be either an absolute dimension
         * or a fraction of the screen size in that dimension.
         * <p/>
         * <p/>
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
         * The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
         * some parent container.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:windowFixedHeightMajor
         */
        public static final int ActionBarWindow_windowFixedHeightMajor = 6;
        /**
         * @attr description
         * A fixed height for the window along the minor axis of the screen,
         * that is, when in landscape. Can be either an absolute dimension
         * or a fraction of the screen size in that dimension.
         * <p/>
         * <p/>
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
         * The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
         * some parent container.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:windowFixedHeightMinor
         */
        public static final int ActionBarWindow_windowFixedHeightMinor = 4;
        /**
         * @attr description
         * A fixed width for the window along the major axis of the screen,
         * that is, when in landscape. Can be either an absolute dimension
         * or a fraction of the screen size in that dimension.
         * <p/>
         * <p/>
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
         * The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
         * some parent container.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:windowFixedWidthMajor
         */
        public static final int ActionBarWindow_windowFixedWidthMajor = 3;
        /**
         * @attr description
         * A fixed width for the window along the minor axis of the screen,
         * that is, when in portrait. Can be either an absolute dimension
         * or a fraction of the screen size in that dimension.
         * <p/>
         * <p/>
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
         * The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
         * some parent container.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:windowFixedWidthMinor
         */
        public static final int ActionBarWindow_windowFixedWidthMinor = 5;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#windowSplitActionBar}
         * attribute's value can be found in the {@link #ActionBarWindow} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:windowSplitActionBar
         */
        public static final int ActionBarWindow_windowSplitActionBar = 2;
        /**
         * Attributes that can be used with a ActionMenuItemView.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
         * </table>
         *
         * @see #ActionMenuItemView_android_minWidth
         */
        public static final int[] ActionMenuItemView = {
                0x0101013f
        };
        /**
         * <p>This symbol is the offset where the {@link android.R.attr#minWidth}
         * attribute's value can be found in the {@link #ActionMenuItemView} array.
         *
         * @attr name android:minWidth
         */
        public static final int ActionMenuItemView_android_minWidth = 0;
        /**
         * Size of padding on either end of a divider.
         */
        public static final int[] ActionMenuView = {

        };
        /**
         * Attributes that can be used with a ActionMode.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #ActionMode_background com.elefante:background}</code></td><td> Specifies a background for the action mode bar.</td></tr>
         * <tr><td><code>{@link #ActionMode_backgroundSplit com.elefante:backgroundSplit}</code></td><td> Specifies a background for the split action mode bar.</td></tr>
         * <tr><td><code>{@link #ActionMode_height com.elefante:height}</code></td><td> Specifies a fixed height for the action mode bar.</td></tr>
         * <tr><td><code>{@link #ActionMode_subtitleTextStyle com.elefante:subtitleTextStyle}</code></td><td> Specifies a style to use for subtitle text.</td></tr>
         * <tr><td><code>{@link #ActionMode_titleTextStyle com.elefante:titleTextStyle}</code></td><td> Specifies a style to use for title text.</td></tr>
         * </table>
         *
         * @see #ActionMode_background
         * @see #ActionMode_backgroundSplit
         * @see #ActionMode_height
         * @see #ActionMode_subtitleTextStyle
         * @see #ActionMode_titleTextStyle
         */
        public static final int[] ActionMode = {
                0x7f01004c, 0x7f010050, 0x7f010051, 0x7f010055,
                0x7f010057
        };
        /**
         * @attr description
         * Specifies a background for the action mode bar.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:background
         */
        public static final int ActionMode_background = 3;
        /**
         * @attr description
         * Specifies a background for the split action mode bar.
         * <p/>
         * <p/>
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:backgroundSplit
         */
        public static final int ActionMode_backgroundSplit = 4;
        /**
         * @attr description
         * Specifies a fixed height for the action mode bar.
         * <p/>
         * <p/>
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:height
         */
        public static final int ActionMode_height = 0;
        /**
         * @attr description
         * Specifies a style to use for subtitle text.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:subtitleTextStyle
         */
        public static final int ActionMode_subtitleTextStyle = 2;
        /**
         * @attr description
         * Specifies a style to use for title text.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:titleTextStyle
         */
        public static final int ActionMode_titleTextStyle = 1;
        /**
         * Attrbitutes for a ActivityChooserView.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.elefante:expandActivityOverflowButtonDrawable}</code></td><td> The drawable to show in the button for expanding the activities overflow popup.</td></tr>
         * <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.elefante:initialActivityCount}</code></td><td> The maximal number of items initially shown in the activity list.</td></tr>
         * </table>
         *
         * @see #ActivityChooserView_expandActivityOverflowButtonDrawable
         * @see #ActivityChooserView_initialActivityCount
         */
        public static final int[] ActivityChooserView = {
                0x7f010090, 0x7f010091
        };
        /**
         * @attr description
         * The drawable to show in the button for expanding the activities overflow popup.
         * <strong>Note:</strong> Clients would like to set this drawable
         * as a clue about the action the chosen activity will perform. For
         * example, if share activity is to be chosen the drawable should
         * give a clue that sharing is to be performed.
         * <p/>
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:expandActivityOverflowButtonDrawable
         */
        public static final int ActivityChooserView_expandActivityOverflowButtonDrawable = 1;
        /**
         * @attr description
         * The maximal number of items initially shown in the activity list.
         * <p/>
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:initialActivityCount
         */
        public static final int ActivityChooserView_initialActivityCount = 0;
        /**
         * Attributes that can be used with a AdsAttrs.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #AdsAttrs_adSize com.elefante:adSize}</code></td><td>
         * The size of the ad.</td></tr>
         * <tr><td><code>{@link #AdsAttrs_adSizes com.elefante:adSizes}</code></td><td>
         * A comma-separated list of the supported ad sizes.</td></tr>
         * <tr><td><code>{@link #AdsAttrs_adUnitId com.elefante:adUnitId}</code></td><td> The ad unit ID.</td></tr>
         * </table>
         *
         * @see #AdsAttrs_adSize
         * @see #AdsAttrs_adSizes
         * @see #AdsAttrs_adUnitId
         */
        public static final int[] AdsAttrs = {
                0x7f010000, 0x7f010001, 0x7f010002
        };
        /**
         * @attr description
         * <p/>
         * The size of the ad. It must be one of BANNER, FULL_BANNER, LEADERBOARD,
         * MEDIUM_RECTANGLE, SMART_BANNER, WIDE_SKYSCRAPER, or
         * &lt;width&gt;x&lt;height&gt;.
         * <p/>
         * <p/>
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:adSize
         */
        public static final int AdsAttrs_adSize = 0;
        /**
         * @attr description
         * <p/>
         * A comma-separated list of the supported ad sizes. The sizes must be one of
         * BANNER, FULL_BANNER, LEADERBOARD, MEDIUM_RECTANGLE, SMART_BANNER,
         * WIDE_SKYSCRAPER, or &lt;width&gt;x&lt;height&gt;.
         * <p/>
         * <p/>
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:adSizes
         */
        public static final int AdsAttrs_adSizes = 1;
        /**
         * @attr description
         * The ad unit ID.
         * <p/>
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:adUnitId
         */
        public static final int AdsAttrs_adUnitId = 2;
        /**
         * Attributes that can be used with a CompatTextView.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #CompatTextView_textAllCaps com.elefante:textAllCaps}</code></td><td> Present the text in ALL CAPS.</td></tr>
         * </table>
         *
         * @see #CompatTextView_textAllCaps
         */
        public static final int[] CompatTextView = {
                0x7f010093
        };
        /**
         * @attr description
         * Present the text in ALL CAPS. This may use a small-caps form when available.
         * <p/>
         * <p/>
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:textAllCaps
         */
        public static final int CompatTextView_textAllCaps = 0;
        /**
         * Attributes that can be specified to define a custom theme
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #CustomWalletTheme_windowTransitionStyle com.elefante:windowTransitionStyle}</code></td><td> Defines the set of transition to be used between activities </td></tr>
         * </table>
         *
         * @see #CustomWalletTheme_windowTransitionStyle
         */
        public static final int[] CustomWalletTheme = {
                0x7f010025
        };
        /**
         * <p/>
         *
         * @attr description
         * Defines the set of transition to be used between activities
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>slide</code></td><td>1</td><td></td></tr>
         * <tr><td><code>none</code></td><td>2</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:windowTransitionStyle
         */
        public static final int CustomWalletTheme_windowTransitionStyle = 0;
        /**
         * Attributes that can be used with a LinearLayoutICS.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #LinearLayoutICS_divider com.elefante:divider}</code></td><td> Drawable to use as a vertical divider between buttons.</td></tr>
         * <tr><td><code>{@link #LinearLayoutICS_dividerPadding com.elefante:dividerPadding}</code></td><td> Size of padding on either end of a divider.</td></tr>
         * <tr><td><code>{@link #LinearLayoutICS_showDividers com.elefante:showDividers}</code></td><td> Setting for which dividers to show.</td></tr>
         * </table>
         *
         * @see #LinearLayoutICS_divider
         * @see #LinearLayoutICS_dividerPadding
         * @see #LinearLayoutICS_showDividers
         */
        public static final int[] LinearLayoutICS = {
                0x7f010054, 0x7f01007b, 0x7f01007c
        };
        /**
         * @attr description
         * Drawable to use as a vertical divider between buttons.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:divider
         */
        public static final int LinearLayoutICS_divider = 0;
        /**
         * @attr description
         * Size of padding on either end of a divider.
         * <p/>
         * <p/>
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:dividerPadding
         */
        public static final int LinearLayoutICS_dividerPadding = 2;
        /**
         * <p/>
         *
         * @attr description
         * Setting for which dividers to show.
         * <p/>
         * <p/>
         * <p>Must be one or more (separated by '|') of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>none</code></td><td>0</td><td></td></tr>
         * <tr><td><code>beginning</code></td><td>1</td><td></td></tr>
         * <tr><td><code>middle</code></td><td>2</td><td></td></tr>
         * <tr><td><code>end</code></td><td>4</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:showDividers
         */
        public static final int LinearLayoutICS_showDividers = 1;
        /**
         * Attributes for LoadingImageView
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #LoadingImageView_circleCrop com.elefante:circleCrop}</code></td><td>
         * Whether or not this view should have a circular clip applied
         * </td></tr>
         * <tr><td><code>{@link #LoadingImageView_imageAspectRatio com.elefante:imageAspectRatio}</code></td><td>
         * The fixed aspect ratio to use in aspect ratio adjustments.</td></tr>
         * <tr><td><code>{@link #LoadingImageView_imageAspectRatioAdjust com.elefante:imageAspectRatioAdjust}</code></td><td>
         * What kind of aspect ratio adjustment to do.</td></tr>
         * </table>
         *
         * @see #LoadingImageView_circleCrop
         * @see #LoadingImageView_imageAspectRatio
         * @see #LoadingImageView_imageAspectRatioAdjust
         */
        public static final int[] LoadingImageView = {
                0x7f010003, 0x7f010004, 0x7f010005
        };
        /**
         * @attr description
         * <p/>
         * Whether or not this view should have a circular clip applied
         * <p/>
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:circleCrop
         */
        public static final int LoadingImageView_circleCrop = 2;
        /**
         * @attr description
         * <p/>
         * The fixed aspect ratio to use in aspect ratio adjustments.
         * <p/>
         * <p/>
         * <p/>
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:imageAspectRatio
         */
        public static final int LoadingImageView_imageAspectRatio = 1;
        /**
         * <p/>
         *
         * @attr description
         * <p/>
         * What kind of aspect ratio adjustment to do.  It must be one of "none", "adjust_width",
         * or "adjust_height".
         * <p/>
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>none</code></td><td>0</td><td></td></tr>
         * <tr><td><code>adjust_width</code></td><td>1</td><td></td></tr>
         * <tr><td><code>adjust_height</code></td><td>2</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:imageAspectRatioAdjust
         */
        public static final int LoadingImageView_imageAspectRatioAdjust = 0;
        /**
         * Attributes that can be used with a MapAttrs.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #MapAttrs_cameraBearing com.elefante:cameraBearing}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_cameraTargetLat com.elefante:cameraTargetLat}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_cameraTargetLng com.elefante:cameraTargetLng}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_cameraTilt com.elefante:cameraTilt}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_cameraZoom com.elefante:cameraZoom}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_liteMode com.elefante:liteMode}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_mapType com.elefante:mapType}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_uiCompass com.elefante:uiCompass}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_uiMapToolbar com.elefante:uiMapToolbar}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_uiRotateGestures com.elefante:uiRotateGestures}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_uiScrollGestures com.elefante:uiScrollGestures}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_uiTiltGestures com.elefante:uiTiltGestures}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_uiZoomControls com.elefante:uiZoomControls}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_uiZoomGestures com.elefante:uiZoomGestures}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_useViewLifecycle com.elefante:useViewLifecycle}</code></td><td></td></tr>
         * <tr><td><code>{@link #MapAttrs_zOrderOnTop com.elefante:zOrderOnTop}</code></td><td></td></tr>
         * </table>
         *
         * @see #MapAttrs_cameraBearing
         * @see #MapAttrs_cameraTargetLat
         * @see #MapAttrs_cameraTargetLng
         * @see #MapAttrs_cameraTilt
         * @see #MapAttrs_cameraZoom
         * @see #MapAttrs_liteMode
         * @see #MapAttrs_mapType
         * @see #MapAttrs_uiCompass
         * @see #MapAttrs_uiMapToolbar
         * @see #MapAttrs_uiRotateGestures
         * @see #MapAttrs_uiScrollGestures
         * @see #MapAttrs_uiTiltGestures
         * @see #MapAttrs_uiZoomControls
         * @see #MapAttrs_uiZoomGestures
         * @see #MapAttrs_useViewLifecycle
         * @see #MapAttrs_zOrderOnTop
         */
        public static final int[] MapAttrs = {
                0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009,
                0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d,
                0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011,
                0x7f010012, 0x7f010013, 0x7f010014, 0x7f010015
        };
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#cameraBearing}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:cameraBearing
         */
        public static final int MapAttrs_cameraBearing = 1;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#cameraTargetLat}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:cameraTargetLat
         */
        public static final int MapAttrs_cameraTargetLat = 2;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#cameraTargetLng}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:cameraTargetLng
         */
        public static final int MapAttrs_cameraTargetLng = 3;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#cameraTilt}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:cameraTilt
         */
        public static final int MapAttrs_cameraTilt = 4;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#cameraZoom}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a floating point value, such as "<code>1.2</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:cameraZoom
         */
        public static final int MapAttrs_cameraZoom = 5;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#liteMode}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:liteMode
         */
        public static final int MapAttrs_liteMode = 6;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#mapType}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>none</code></td><td>0</td><td></td></tr>
         * <tr><td><code>normal</code></td><td>1</td><td></td></tr>
         * <tr><td><code>satellite</code></td><td>2</td><td></td></tr>
         * <tr><td><code>terrain</code></td><td>3</td><td></td></tr>
         * <tr><td><code>hybrid</code></td><td>4</td><td></td></tr>
         * </table>
         *
         * @attr name com.elefante:mapType
         */
        public static final int MapAttrs_mapType = 0;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#uiCompass}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:uiCompass
         */
        public static final int MapAttrs_uiCompass = 7;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#uiMapToolbar}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:uiMapToolbar
         */
        public static final int MapAttrs_uiMapToolbar = 15;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#uiRotateGestures}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:uiRotateGestures
         */
        public static final int MapAttrs_uiRotateGestures = 8;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#uiScrollGestures}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:uiScrollGestures
         */
        public static final int MapAttrs_uiScrollGestures = 9;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#uiTiltGestures}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:uiTiltGestures
         */
        public static final int MapAttrs_uiTiltGestures = 10;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#uiZoomControls}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:uiZoomControls
         */
        public static final int MapAttrs_uiZoomControls = 11;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#uiZoomGestures}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:uiZoomGestures
         */
        public static final int MapAttrs_uiZoomGestures = 12;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#useViewLifecycle}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:useViewLifecycle
         */
        public static final int MapAttrs_useViewLifecycle = 13;
        /**
         * <p>This symbol is the offset where the {@link com.elefante.R.attr#zOrderOnTop}
         * attribute's value can be found in the {@link #MapAttrs} array.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         *
         * @attr name com.elefante:zOrderOnTop
         */
        public static final int MapAttrs_zOrderOnTop = 14;
        /**
         * Base attributes that are available to all groups.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td> Whether the items are capable of displaying a check mark.</td></tr>
         * <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td> Whether the items are enabled.</td></tr>
         * <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td> The ID of the group.</td></tr>
         * <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td> The category applied to all items within this group.</td></tr>
         * <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td> The order within the category applied to all items within this group.</td></tr>
         * <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td> Whether the items are shown/visible.</td></tr>
         * </table>
         *
         * @see #MenuGroup_android_checkableBehavior
         * @see #MenuGroup_android_enabled
         * @see #MenuGroup_android_id
         * @see #MenuGroup_android_menuCategory
         * @see #MenuGroup_android_orderInCategory
         * @see #MenuGroup_android_visible
         */
        public static final int[] MenuGroup = {
                0x0101000e, 0x010100d0, 0x01010194, 0x010101de,
                0x010101df, 0x010101e0
        };
        /**
         * @attr description
         * Whether the items are capable of displaying a check mark.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#checkableBehavior}.
         * @attr name android:checkableBehavior
         */
        public static final int MenuGroup_android_checkableBehavior = 5;
        /**
         * @attr description
         * Whether the items are enabled.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#enabled}.
         * @attr name android:enabled
         */
        public static final int MenuGroup_android_enabled = 0;
        /**
         * @attr description
         * The ID of the group.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#id}.
         * @attr name android:id
         */
        public static final int MenuGroup_android_id = 1;
        /**
         * @attr description
         * The category applied to all items within this group.
         * (This will be or'ed with the orderInCategory attribute.)
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#menuCategory}.
         * @attr name android:menuCategory
         */
        public static final int MenuGroup_android_menuCategory = 3;
        /**
         * @attr description
         * The order within the category applied to all items within this group.
         * (This will be or'ed with the category attribute.)
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#orderInCategory}.
         * @attr name android:orderInCategory
         */
        public static final int MenuGroup_android_orderInCategory = 4;
        /**
         * @attr description
         * Whether the items are shown/visible.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#visible}.
         * @attr name android:visible
         */
        public static final int MenuGroup_android_visible = 2;
        /**
         * Base attributes that are available to all Item objects.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #MenuItem_actionLayout com.elefante:actionLayout}</code></td><td> An optional layout to be used as an action view.</td></tr>
         * <tr><td><code>{@link #MenuItem_actionProviderClass com.elefante:actionProviderClass}</code></td><td> The name of an optional ActionProvider class to instantiate an action view
         * and perform operations such as default action for that menu item.</td></tr>
         * <tr><td><code>{@link #MenuItem_actionViewClass com.elefante:actionViewClass}</code></td><td> The name of an optional View class to instantiate and use as an
         * action view.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td> The alphabetic shortcut key.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td> Whether the item is capable of displaying a check mark.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td> Whether the item is checked.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td> Whether the item is enabled.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td> The icon associated with this item.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td> The ID of the item.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td> The category applied to the item.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td> The numeric shortcut key.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td> Name of a method on the Context used to inflate the menu that will be
         * called when the item is clicked.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td> The order within the category applied to the item.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td> The title associated with the item.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td> The condensed title associated with the item.</td></tr>
         * <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td> Whether the item is shown/visible.</td></tr>
         * <tr><td><code>{@link #MenuItem_showAsAction com.elefante:showAsAction}</code></td><td> How this item should display in the Action Bar, if present.</td></tr>
         * </table>
         *
         * @see #MenuItem_actionLayout
         * @see #MenuItem_actionProviderClass
         * @see #MenuItem_actionViewClass
         * @see #MenuItem_android_alphabeticShortcut
         * @see #MenuItem_android_checkable
         * @see #MenuItem_android_checked
         * @see #MenuItem_android_enabled
         * @see #MenuItem_android_icon
         * @see #MenuItem_android_id
         * @see #MenuItem_android_menuCategory
         * @see #MenuItem_android_numericShortcut
         * @see #MenuItem_android_onClick
         * @see #MenuItem_android_orderInCategory
         * @see #MenuItem_android_title
         * @see #MenuItem_android_titleCondensed
         * @see #MenuItem_android_visible
         * @see #MenuItem_showAsAction
         */
        public static final int[] MenuItem = {
                0x01010002, 0x0101000e, 0x010100d0, 0x01010106,
                0x01010194, 0x010101de, 0x010101df, 0x010101e1,
                0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5,
                0x0101026f, 0x7f010073, 0x7f010074, 0x7f010075,
                0x7f010076
        };
        /**
         * @attr description
         * An optional layout to be used as an action view.
         * See {@link android.view.MenuItem#setActionView(android.view.View)}
         * for more info.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:actionLayout
         */
        public static final int MenuItem_actionLayout = 14;
        /**
         * @attr description
         * The name of an optional ActionProvider class to instantiate an action view
         * and perform operations such as default action for that menu item.
         * See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
         * for more info.
         * <p/>
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:actionProviderClass
         */
        public static final int MenuItem_actionProviderClass = 16;
        /**
         * @attr description
         * The name of an optional View class to instantiate and use as an
         * action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
         * for more info.
         * <p/>
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:actionViewClass
         */
        public static final int MenuItem_actionViewClass = 15;
        /**
         * @attr description
         * The alphabetic shortcut key.  This is the shortcut when using a keyboard
         * with alphabetic keys.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#alphabeticShortcut}.
         * @attr name android:alphabeticShortcut
         */
        public static final int MenuItem_android_alphabeticShortcut = 9;
        /**
         * @attr description
         * Whether the item is capable of displaying a check mark.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#checkable}.
         * @attr name android:checkable
         */
        public static final int MenuItem_android_checkable = 11;
        /**
         * @attr description
         * Whether the item is checked.  Note that you must first have enabled checking with
         * the checkable attribute or else the check mark will not appear.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#checked}.
         * @attr name android:checked
         */
        public static final int MenuItem_android_checked = 3;
        /**
         * @attr description
         * Whether the item is enabled.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#enabled}.
         * @attr name android:enabled
         */
        public static final int MenuItem_android_enabled = 1;
        /**
         * @attr description
         * The icon associated with this item.  This icon will not always be shown, so
         * the title should be sufficient in describing this item.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#icon}.
         * @attr name android:icon
         */
        public static final int MenuItem_android_icon = 0;
        /**
         * @attr description
         * The ID of the item.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#id}.
         * @attr name android:id
         */
        public static final int MenuItem_android_id = 2;
        /**
         * @attr description
         * The category applied to the item.
         * (This will be or'ed with the orderInCategory attribute.)
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#menuCategory}.
         * @attr name android:menuCategory
         */
        public static final int MenuItem_android_menuCategory = 5;
        /**
         * @attr description
         * The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
         * keyboard.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#numericShortcut}.
         * @attr name android:numericShortcut
         */
        public static final int MenuItem_android_numericShortcut = 10;
        /**
         * @attr description
         * Name of a method on the Context used to inflate the menu that will be
         * called when the item is clicked.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#onClick}.
         * @attr name android:onClick
         */
        public static final int MenuItem_android_onClick = 12;
        /**
         * @attr description
         * The order within the category applied to the item.
         * (This will be or'ed with the category attribute.)
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#orderInCategory}.
         * @attr name android:orderInCategory
         */
        public static final int MenuItem_android_orderInCategory = 6;
        /**
         * @attr description
         * The title associated with the item.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#title}.
         * @attr name android:title
         */
        public static final int MenuItem_android_title = 7;
        /**
         * @attr description
         * The condensed title associated with the item.  This is used in situations where the
         * normal title may be too long to be displayed.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#titleCondensed}.
         * @attr name android:titleCondensed
         */
        public static final int MenuItem_android_titleCondensed = 8;
        /**
         * @attr description
         * Whether the item is shown/visible.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#visible}.
         * @attr name android:visible
         */
        public static final int MenuItem_android_visible = 4;
        /**
         * <p/>
         *
         * @attr description
         * How this item should display in the Action Bar, if present.
         * <p/>
         * <p/>
         * <p>Must be one or more (separated by '|') of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>never</code></td><td>0</td><td> Never show this item in an action bar, show it in the overflow menu instead.
         * Mutually exclusive with "ifRoom" and "always". </td></tr>
         * <tr><td><code>ifRoom</code></td><td>1</td><td> Show this item in an action bar if there is room for it as determined
         * by the system. Favor this option over "always" where possible.
         * Mutually exclusive with "never" and "always". </td></tr>
         * <tr><td><code>always</code></td><td>2</td><td> Always show this item in an actionbar, even if it would override
         * the system's limits of how much stuff to put there. This may make
         * your action bar look bad on some screens. In most cases you should
         * use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never". </td></tr>
         * <tr><td><code>withText</code></td><td>4</td><td> When this item is shown as an action in the action bar, show a text
         * label with it even if it has an icon representation. </td></tr>
         * <tr><td><code>collapseActionView</code></td><td>8</td><td> This item's action view collapses to a normal menu
         * item. When expanded, the action view takes over a
         * larger segment of its container. </td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:showAsAction
         */
        public static final int MenuItem_showAsAction = 13;
        /**
         * Attributes that can be used with a MenuView.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td> Default background for the menu header.</td></tr>
         * <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td> Default horizontal divider between rows of menu items.</td></tr>
         * <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td> Default background for each menu item.</td></tr>
         * <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td> Default disabled icon alpha for each menu item that shows an icon.</td></tr>
         * <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td> Default appearance of menu item text.</td></tr>
         * <tr><td><code>{@link #MenuView_android_preserveIconSpacing android:preserveIconSpacing}</code></td><td> Whether space should be reserved in layout when an icon is missing.</td></tr>
         * <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td> Default vertical divider between menu items.</td></tr>
         * <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td> Default animations for the menu.</td></tr>
         * </table>
         *
         * @see #MenuView_android_headerBackground
         * @see #MenuView_android_horizontalDivider
         * @see #MenuView_android_itemBackground
         * @see #MenuView_android_itemIconDisabledAlpha
         * @see #MenuView_android_itemTextAppearance
         * @see #MenuView_android_preserveIconSpacing
         * @see #MenuView_android_verticalDivider
         * @see #MenuView_android_windowAnimationStyle
         */
        public static final int[] MenuView = {
                0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e,
                0x0101012f, 0x01010130, 0x01010131, 0x0116004c
        };
        /**
         * @attr description
         * Default background for the menu header.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#headerBackground}.
         * @attr name android:headerBackground
         */
        public static final int MenuView_android_headerBackground = 4;
        /**
         * @attr description
         * Default horizontal divider between rows of menu items.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#horizontalDivider}.
         * @attr name android:horizontalDivider
         */
        public static final int MenuView_android_horizontalDivider = 2;
        /**
         * @attr description
         * Default background for each menu item.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#itemBackground}.
         * @attr name android:itemBackground
         */
        public static final int MenuView_android_itemBackground = 5;
        /**
         * @attr description
         * Default disabled icon alpha for each menu item that shows an icon.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#itemIconDisabledAlpha}.
         * @attr name android:itemIconDisabledAlpha
         */
        public static final int MenuView_android_itemIconDisabledAlpha = 6;
        /**
         * @attr description
         * Default appearance of menu item text.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#itemTextAppearance}.
         * @attr name android:itemTextAppearance
         */
        public static final int MenuView_android_itemTextAppearance = 1;
        /**
         * @attr description
         * Whether space should be reserved in layout when an icon is missing.
         * <p>This is a private symbol.
         * @attr name android:preserveIconSpacing
         */
        public static final int MenuView_android_preserveIconSpacing = 7;
        /**
         * @attr description
         * Default vertical divider between menu items.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#verticalDivider}.
         * @attr name android:verticalDivider
         */
        public static final int MenuView_android_verticalDivider = 3;
        /**
         * @attr description
         * Default animations for the menu.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#windowAnimationStyle}.
         * @attr name android:windowAnimationStyle
         */
        public static final int MenuView_android_windowAnimationStyle = 0;
        /**
         * Attributes that can be used with a SearchView.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td> The IME options to set on the query text field.</td></tr>
         * <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td> The input type to set on the query text field.</td></tr>
         * <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td> An optional maximum width of the SearchView.</td></tr>
         * <tr><td><code>{@link #SearchView_iconifiedByDefault com.elefante:iconifiedByDefault}</code></td><td> The default state of the SearchView.</td></tr>
         * <tr><td><code>{@link #SearchView_queryHint com.elefante:queryHint}</code></td><td> An optional query hint string to be displayed in the empty query field.</td></tr>
         * </table>
         *
         * @see #SearchView_android_imeOptions
         * @see #SearchView_android_inputType
         * @see #SearchView_android_maxWidth
         * @see #SearchView_iconifiedByDefault
         * @see #SearchView_queryHint
         */
        public static final int[] SearchView = {
                0x0101011f, 0x01010220, 0x01010264, 0x7f010080,
                0x7f010081
        };
        /**
         * @attr description
         * The IME options to set on the query text field.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#imeOptions}.
         * @attr name android:imeOptions
         */
        public static final int SearchView_android_imeOptions = 2;
        /**
         * @attr description
         * The input type to set on the query text field.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#inputType}.
         * @attr name android:inputType
         */
        public static final int SearchView_android_inputType = 1;
        /**
         * @attr description
         * An optional maximum width of the SearchView.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#maxWidth}.
         * @attr name android:maxWidth
         */
        public static final int SearchView_android_maxWidth = 0;
        /**
         * @attr description
         * The default state of the SearchView. If true, it will be iconified when not in
         * use and expanded when clicked.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:iconifiedByDefault
         */
        public static final int SearchView_iconifiedByDefault = 3;
        /**
         * @attr description
         * An optional query hint string to be displayed in the empty query field.
         * <p/>
         * <p/>
         * <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:queryHint
         */
        public static final int SearchView_queryHint = 4;
        /**
         * Attributes that can be used with a Spinner.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #Spinner_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td> Horizontal offset from the spinner widget for positioning the dropdown
         * in spinnerMode="dropdown".</td></tr>
         * <tr><td><code>{@link #Spinner_android_dropDownSelector android:dropDownSelector}</code></td><td> List selector to use for spinnerMode="dropdown" display.</td></tr>
         * <tr><td><code>{@link #Spinner_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td> Vertical offset from the spinner widget for positioning the dropdown in
         * spinnerMode="dropdown".</td></tr>
         * <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td> Width of the dropdown in spinnerMode="dropdown".</td></tr>
         * <tr><td><code>{@link #Spinner_android_gravity android:gravity}</code></td><td> Gravity setting for positioning the currently selected item.</td></tr>
         * <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td> Background drawable to use for the dropdown in spinnerMode="dropdown".</td></tr>
         * <tr><td><code>{@link #Spinner_disableChildrenWhenDisabled com.elefante:disableChildrenWhenDisabled}</code></td><td> Whether this spinner should mark child views as enabled/disabled when
         * the spinner itself is enabled/disabled.</td></tr>
         * <tr><td><code>{@link #Spinner_popupPromptView com.elefante:popupPromptView}</code></td><td> Reference to a layout to use for displaying a prompt in the dropdown for
         * spinnerMode="dropdown".</td></tr>
         * <tr><td><code>{@link #Spinner_prompt com.elefante:prompt}</code></td><td> The prompt to display when the spinner's dialog is shown.</td></tr>
         * <tr><td><code>{@link #Spinner_spinnerMode com.elefante:spinnerMode}</code></td><td> Display mode for spinner options.</td></tr>
         * </table>
         *
         * @see #Spinner_android_dropDownHorizontalOffset
         * @see #Spinner_android_dropDownSelector
         * @see #Spinner_android_dropDownVerticalOffset
         * @see #Spinner_android_dropDownWidth
         * @see #Spinner_android_gravity
         * @see #Spinner_android_popupBackground
         * @see #Spinner_disableChildrenWhenDisabled
         * @see #Spinner_popupPromptView
         * @see #Spinner_prompt
         * @see #Spinner_spinnerMode
         */
        public static final int[] Spinner = {
                0x010100af, 0x01010175, 0x01010176, 0x01010262,
                0x010102ac, 0x010102ad, 0x7f010077, 0x7f010078,
                0x7f010079, 0x7f01007a
        };
        /**
         * @attr description
         * Horizontal offset from the spinner widget for positioning the dropdown
         * in spinnerMode="dropdown".
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#dropDownHorizontalOffset}.
         * @attr name android:dropDownHorizontalOffset
         */
        public static final int Spinner_android_dropDownHorizontalOffset = 4;
        /**
         * @attr description
         * List selector to use for spinnerMode="dropdown" display.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#dropDownSelector}.
         * @attr name android:dropDownSelector
         */
        public static final int Spinner_android_dropDownSelector = 1;
        /**
         * @attr description
         * Vertical offset from the spinner widget for positioning the dropdown in
         * spinnerMode="dropdown".
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#dropDownVerticalOffset}.
         * @attr name android:dropDownVerticalOffset
         */
        public static final int Spinner_android_dropDownVerticalOffset = 5;
        /**
         * @attr description
         * Width of the dropdown in spinnerMode="dropdown".
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#dropDownWidth}.
         * @attr name android:dropDownWidth
         */
        public static final int Spinner_android_dropDownWidth = 3;
        /**
         * @attr description
         * Gravity setting for positioning the currently selected item.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#gravity}.
         * @attr name android:gravity
         */
        public static final int Spinner_android_gravity = 0;
        /**
         * @attr description
         * Background drawable to use for the dropdown in spinnerMode="dropdown".
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#popupBackground}.
         * @attr name android:popupBackground
         */
        public static final int Spinner_android_popupBackground = 2;
        /**
         * @attr description
         * Whether this spinner should mark child views as enabled/disabled when
         * the spinner itself is enabled/disabled.
         * <p/>
         * <p/>
         * <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:disableChildrenWhenDisabled
         */
        public static final int Spinner_disableChildrenWhenDisabled = 9;
        /**
         * @attr description
         * Reference to a layout to use for displaying a prompt in the dropdown for
         * spinnerMode="dropdown". This layout must contain a TextView with the id
         * {@code @android:id/text1} to be populated with the prompt text.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:popupPromptView
         */
        public static final int Spinner_popupPromptView = 8;
        /**
         * @attr description
         * The prompt to display when the spinner's dialog is shown.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:prompt
         */
        public static final int Spinner_prompt = 6;
        /**
         * <p/>
         *
         * @attr description
         * Display mode for spinner options.
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>dialog</code></td><td>0</td><td> Spinner options will be presented to the user as a dialog window. </td></tr>
         * <tr><td><code>dropdown</code></td><td>1</td><td> Spinner options will be presented to the user as an inline dropdown
         * anchored to the spinner widget itself. </td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:spinnerMode
         */
        public static final int Spinner_spinnerMode = 7;
        /**
         * These are the standard attributes that make up a complete theme.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #Theme_actionDropDownStyle com.elefante:actionDropDownStyle}</code></td><td> Default ActionBar dropdown style.</td></tr>
         * <tr><td><code>{@link #Theme_dropdownListPreferredItemHeight com.elefante:dropdownListPreferredItemHeight}</code></td><td> The preferred item height for dropdown lists.</td></tr>
         * <tr><td><code>{@link #Theme_listChoiceBackgroundIndicator com.elefante:listChoiceBackgroundIndicator}</code></td><td> Drawable used as a background for selected list items.</td></tr>
         * <tr><td><code>{@link #Theme_panelMenuListTheme com.elefante:panelMenuListTheme}</code></td><td> Default Panel Menu style.</td></tr>
         * <tr><td><code>{@link #Theme_panelMenuListWidth com.elefante:panelMenuListWidth}</code></td><td> Default Panel Menu width.</td></tr>
         * <tr><td><code>{@link #Theme_popupMenuStyle com.elefante:popupMenuStyle}</code></td><td> Default PopupMenu style.</td></tr>
         * </table>
         *
         * @see #Theme_actionDropDownStyle
         * @see #Theme_dropdownListPreferredItemHeight
         * @see #Theme_listChoiceBackgroundIndicator
         * @see #Theme_panelMenuListTheme
         * @see #Theme_panelMenuListWidth
         * @see #Theme_popupMenuStyle
         */
        public static final int[] Theme = {
                0x7f01006d, 0x7f01006e, 0x7f01006f, 0x7f010070,
                0x7f010071, 0x7f010072
        };
        /**
         * @attr description
         * Default ActionBar dropdown style.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:actionDropDownStyle
         */
        public static final int Theme_actionDropDownStyle = 0;
        /**
         * @attr description
         * The preferred item height for dropdown lists.
         * <p/>
         * <p/>
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:dropdownListPreferredItemHeight
         */
        public static final int Theme_dropdownListPreferredItemHeight = 1;
        /**
         * @attr description
         * Drawable used as a background for selected list items.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:listChoiceBackgroundIndicator
         */
        public static final int Theme_listChoiceBackgroundIndicator = 5;
        /**
         * @attr description
         * Default Panel Menu style.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:panelMenuListTheme
         */
        public static final int Theme_panelMenuListTheme = 4;
        /**
         * @attr description
         * Default Panel Menu width.
         * <p/>
         * <p/>
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:panelMenuListWidth
         */
        public static final int Theme_panelMenuListWidth = 3;
        /**
         * @attr description
         * Default PopupMenu style.
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:popupMenuStyle
         */
        public static final int Theme_popupMenuStyle = 2;
        /**
         * Attributes that can be used with a View.
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td> Boolean that controls whether a view can take focus.</td></tr>
         * <tr><td><code>{@link #View_paddingEnd com.elefante:paddingEnd}</code></td><td> Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
         * <tr><td><code>{@link #View_paddingStart com.elefante:paddingStart}</code></td><td> Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
         * </table>
         *
         * @see #View_android_focusable
         * @see #View_paddingEnd
         * @see #View_paddingStart
         */
        public static final int[] View = {
                0x010100da, 0x7f01005e, 0x7f01005f
        };
        /**
         * @attr description
         * Boolean that controls whether a view can take focus.  By default the user can not
         * move focus to a view; by setting this attribute to true the view is
         * allowed to take focus.  This value does not impact the behavior of
         * directly calling {@link android.view.View#requestFocus}, which will
         * always request focus regardless of this view.  It only impacts where
         * focus navigation will try to move focus.
         * <p>This corresponds to the global attribute
         * resource symbol {@link android.R.attr#focusable}.
         * @attr name android:focusable
         */
        public static final int View_android_focusable = 0;
        /**
         * @attr description
         * Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.
         * <p/>
         * <p/>
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:paddingEnd
         */
        public static final int View_paddingEnd = 2;
        /**
         * @attr description
         * Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.
         * <p/>
         * <p/>
         * <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:paddingStart
         */
        public static final int View_paddingStart = 1;
        /**
         * Attributes for the WalletFragment &lt;fragment&gt; tag
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #WalletFragmentOptions_appTheme com.elefante:appTheme}</code></td><td> Theme to be used for the Wallet selector </td></tr>
         * <tr><td><code>{@link #WalletFragmentOptions_environment com.elefante:environment}</code></td><td> Google Wallet environment to use </td></tr>
         * <tr><td><code>{@link #WalletFragmentOptions_fragmentMode com.elefante:fragmentMode}</code></td><td> Fragment mode </td></tr>
         * <tr><td><code>{@link #WalletFragmentOptions_fragmentStyle com.elefante:fragmentStyle}</code></td><td> A style resource specifing attributes to customize the look and feel of WalletFragment </td></tr>
         * </table>
         *
         * @see #WalletFragmentOptions_appTheme
         * @see #WalletFragmentOptions_environment
         * @see #WalletFragmentOptions_fragmentMode
         * @see #WalletFragmentOptions_fragmentStyle
         */
        public static final int[] WalletFragmentOptions = {
                0x7f010016, 0x7f010017, 0x7f010018, 0x7f010019
        };
        /**
         * <p/>
         *
         * @attr description
         * Theme to be used for the Wallet selector
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>holo_dark</code></td><td>0</td><td></td></tr>
         * <tr><td><code>holo_light</code></td><td>1</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:appTheme
         */
        public static final int WalletFragmentOptions_appTheme = 0;
        /**
         * <p/>
         *
         * @attr description
         * Google Wallet environment to use
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>production</code></td><td>1</td><td></td></tr>
         * <tr><td><code>test</code></td><td>3</td><td></td></tr>
         * <tr><td><code>sandbox</code></td><td>0</td><td></td></tr>
         * <tr><td><code>strict_sandbox</code></td><td>2</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:environment
         */
        public static final int WalletFragmentOptions_environment = 1;
        /**
         * <p/>
         *
         * @attr description
         * Fragment mode
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>buyButton</code></td><td>1</td><td></td></tr>
         * <tr><td><code>selectionDetails</code></td><td>2</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:fragmentMode
         */
        public static final int WalletFragmentOptions_fragmentMode = 3;
        /**
         * @attr description
         * A style resource specifing attributes to customize the look and feel of WalletFragment
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:fragmentStyle
         */
        public static final int WalletFragmentOptions_fragmentStyle = 2;
        /**
         * Attributes that may be specified in a style resource to customize the look and feel of
         * WalletFragment
         * <p>Includes the following attributes:</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Attribute</th><th>Description</th></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_buyButtonAppearance com.elefante:buyButtonAppearance}</code></td><td> The appearance of the buy button </td></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_buyButtonHeight com.elefante:buyButtonHeight}</code></td><td> Height of the buy button.</td></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_buyButtonText com.elefante:buyButtonText}</code></td><td> The text on the buy button </td></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_buyButtonWidth com.elefante:buyButtonWidth}</code></td><td> Width of the buy button.</td></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_maskedWalletDetailsBackground com.elefante:maskedWalletDetailsBackground}</code></td><td> Masked wallet details background </td></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_maskedWalletDetailsButtonBackground com.elefante:maskedWalletDetailsButtonBackground}</code></td><td> "Change" button background in masked wallet details view </td></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_maskedWalletDetailsButtonTextAppearance com.elefante:maskedWalletDetailsButtonTextAppearance}</code></td><td> TextAppearance for the "Change" button in masked wallet details view </td></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_maskedWalletDetailsHeaderTextAppearance com.elefante:maskedWalletDetailsHeaderTextAppearance}</code></td><td> TextAppearance for headers describing masked wallet details </td></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_maskedWalletDetailsLogoImageType com.elefante:maskedWalletDetailsLogoImageType}</code></td><td> Type of the wallet logo image in masked wallet details view </td></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_maskedWalletDetailsLogoTextColor com.elefante:maskedWalletDetailsLogoTextColor}</code></td><td> Color of the Google Wallet logo text in masked wallet details view </td></tr>
         * <tr><td><code>{@link #WalletFragmentStyle_maskedWalletDetailsTextAppearance com.elefante:maskedWalletDetailsTextAppearance}</code></td><td> TextAppearance for masked wallet details </td></tr>
         * </table>
         *
         * @see #WalletFragmentStyle_buyButtonAppearance
         * @see #WalletFragmentStyle_buyButtonHeight
         * @see #WalletFragmentStyle_buyButtonText
         * @see #WalletFragmentStyle_buyButtonWidth
         * @see #WalletFragmentStyle_maskedWalletDetailsBackground
         * @see #WalletFragmentStyle_maskedWalletDetailsButtonBackground
         * @see #WalletFragmentStyle_maskedWalletDetailsButtonTextAppearance
         * @see #WalletFragmentStyle_maskedWalletDetailsHeaderTextAppearance
         * @see #WalletFragmentStyle_maskedWalletDetailsLogoImageType
         * @see #WalletFragmentStyle_maskedWalletDetailsLogoTextColor
         * @see #WalletFragmentStyle_maskedWalletDetailsTextAppearance
         */
        public static final int[] WalletFragmentStyle = {
                0x7f01001a, 0x7f01001b, 0x7f01001c, 0x7f01001d,
                0x7f01001e, 0x7f01001f, 0x7f010020, 0x7f010021,
                0x7f010022, 0x7f010023, 0x7f010024
        };
        /**
         * <p/>
         *
         * @attr description
         * The appearance of the buy button
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>google_wallet_classic</code></td><td>1</td><td></td></tr>
         * <tr><td><code>google_wallet_grayscale</code></td><td>2</td><td></td></tr>
         * <tr><td><code>google_wallet_monochrome</code></td><td>3</td><td></td></tr>
         * <tr><td><code>classic</code></td><td>1</td><td> TODO(waltercacau): Uncomment when Android Pay is launched to all developers:
         * <enum name="android_pay_dark" value="4"/>
         * <enum name="android_pay_light" value="5"/>
         * <enum name="android_pay_light_with_border" value="6"/>
         * Deprecated values </td></tr>
         * <tr><td><code>grayscale</code></td><td>2</td><td></td></tr>
         * <tr><td><code>monochrome</code></td><td>3</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:buyButtonAppearance
         */
        public static final int WalletFragmentStyle_buyButtonAppearance = 3;
        /**
         * <p/>
         *
         * @attr description
         * Height of the buy button. This includes an 8dp padding (4dp on each side) used for
         * pressed and focused states of the button. The value can be a specific height, e.g.
         * "48dp", or special values "match_parent" and "wrap_content".
         * <p/>
         * <p/>
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>May be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>match_parent</code></td><td>-1</td><td></td></tr>
         * <tr><td><code>wrap_content</code></td><td>-2</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:buyButtonHeight
         */
        public static final int WalletFragmentStyle_buyButtonHeight = 0;
        /**
         * <p/>
         *
         * @attr description
         * The text on the buy button
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>buy_with</code></td><td>5</td><td></td></tr>
         * <tr><td><code>logo_only</code></td><td>6</td><td></td></tr>
         * <tr><td><code>donate_with</code></td><td>7</td><td></td></tr>
         * <tr><td><code>buy_with_google</code></td><td>1</td><td> Deprecated values </td></tr>
         * <tr><td><code>buy_now</code></td><td>2</td><td></td></tr>
         * <tr><td><code>book_now</code></td><td>3</td><td></td></tr>
         * <tr><td><code>donate_with_google</code></td><td>4</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:buyButtonText
         */
        public static final int WalletFragmentStyle_buyButtonText = 2;
        /**
         * <p/>
         *
         * @attr description
         * Width of the buy button. This includes an 8dp padding (4dp on each side) used for
         * pressed and focused states of the button. The value can be a specific width, e.g.
         * "300dp", or special values "match_parent" and "wrap_content".
         * <p/>
         * <p/>
         * <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
         * Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
         * in (inches), mm (millimeters).
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>May be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>match_parent</code></td><td>-1</td><td></td></tr>
         * <tr><td><code>wrap_content</code></td><td>-2</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:buyButtonWidth
         */
        public static final int WalletFragmentStyle_buyButtonWidth = 1;
        /**
         * @attr description
         * Masked wallet details background
         * <p/>
         * <p/>
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:maskedWalletDetailsBackground
         */
        public static final int WalletFragmentStyle_maskedWalletDetailsBackground = 6;
        /**
         * @attr description
         * "Change" button background in masked wallet details view
         * <p/>
         * <p/>
         * <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:maskedWalletDetailsButtonBackground
         */
        public static final int WalletFragmentStyle_maskedWalletDetailsButtonBackground = 8;
        /**
         * @attr description
         * TextAppearance for the "Change" button in masked wallet details view
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:maskedWalletDetailsButtonTextAppearance
         */
        public static final int WalletFragmentStyle_maskedWalletDetailsButtonTextAppearance = 7;
        /**
         * @attr description
         * TextAppearance for headers describing masked wallet details
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:maskedWalletDetailsHeaderTextAppearance
         */
        public static final int WalletFragmentStyle_maskedWalletDetailsHeaderTextAppearance = 5;
        /**
         * <p/>
         *
         * @attr description
         * Type of the wallet logo image in masked wallet details view
         * <p/>
         * <p/>
         * <p>Must be one of the following constant values.</p>
         * <table>
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <colgroup align="left" />
         * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
         * <tr><td><code>google_wallet_classic</code></td><td>1</td><td></td></tr>
         * <tr><td><code>google_wallet_monochrome</code></td><td>2</td><td></td></tr>
         * <tr><td><code>classic</code></td><td>1</td><td> TODO(waltercacau): Uncomment when Android Pay is launched to all developers:
         * <enum name="android_pay" value="3"/>
         * Deprecated values </td></tr>
         * <tr><td><code>monochrome</code></td><td>2</td><td></td></tr>
         * </table>
         * <p>This is a private symbol.
         * @attr name com.elefante:maskedWalletDetailsLogoImageType
         */
        public static final int WalletFragmentStyle_maskedWalletDetailsLogoImageType = 10;
        /**
         * @attr description
         * Color of the Google Wallet logo text in masked wallet details view
         * <p/>
         * <p/>
         * <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
         * "<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         * <p>This may also be a reference to a resource (in the form
         * "<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
         * theme attribute (in the form
         * "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
         * containing a value of this type.
         * <p>This is a private symbol.
         * @attr name com.elefante:maskedWalletDetailsLogoTextColor
         */
        public static final int WalletFragmentStyle_maskedWalletDetailsLogoTextColor = 9;
        /**
         * @attr description
         * TextAppearance for masked wallet details
         * <p/>
         * <p/>
         * <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
         * or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         * <p>This is a private symbol.
         * @attr name com.elefante:maskedWalletDetailsTextAppearance
         */
        public static final int WalletFragmentStyle_maskedWalletDetailsTextAppearance = 4;
    }

    ;
}
